

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Aug 01 04:17:59 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36  0000                     
    37                           ; Version 2.32
    38                           ; Generated 02/02/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4520 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     _PORTCbits	set	3970
    73  0000                     _SPBRG	set	4015
    74  0000                     _SPBRGH	set	4016
    75  0000                     _BAUDCON	set	4024
    76  0000                     _TXSTA	set	4012
    77  0000                     _RCREG	set	4014
    78  0000                     _RCSTA	set	4011
    79  0000                     _TXREG	set	4013
    80  0000                     _T2CON	set	4042
    81  0000                     _CCP1CON	set	4029
    82  0000                     _CCPR1L	set	4030
    83  0000                     _PR2	set	4043
    84  0000                     _PORTEbits	set	3972
    85  0000                     _TRISA	set	3986
    86  0000                     _PORTE	set	3972
    87  0000                     _PORTC	set	3970
    88  0000                     _PORTA	set	3968
    89  0000                     _PIR1	set	3998
    90  0000                     _TRISCbits	set	3988
    91  0000                     _PORTD	set	3971
    92  0000                     _PORTB	set	3969
    93  0000                     _TRISE	set	3990
    94  0000                     _TRISD	set	3989
    95  0000                     _TRISC	set	3988
    96  0000                     _TRISB	set	3987
    97  0000                     _ADCON1	set	4033
    98                           
    99                           	psect	smallconst
   100  000600                     __psmallconst:
   101                           	callstack 0
   102  000600  00                 	db	0
   103  000601                     STR_9:
   104  000601  2D                 	db	45
   105  000602  50                 	db	80	;'P'
   106  000603  72                 	db	114	;'r'
   107  000604  6F                 	db	111	;'o'
   108  000605  78                 	db	120	;'x'
   109  000606  69                 	db	105	;'i'
   110  000607  6D                 	db	109	;'m'
   111  000608  61                 	db	97	;'a'
   112  000609  73                 	db	115	;'s'
   113  00060A  20                 	db	32
   114  00060B  74                 	db	116	;'t'
   115  00060C  61                 	db	97	;'a'
   116  00060D  73                 	db	115	;'s'
   117  00060E  6B                 	db	107	;'k'
   118  00060F  73                 	db	115	;'s'
   119  000610  2D                 	db	45
   120  000611  00                 	db	0
   121  000612                     STR_5:
   122  000612  32                 	db	50	;'2'
   123  000613  29                 	db	41
   124  000614  43                 	db	67	;'C'
   125  000615  61                 	db	97	;'a'
   126  000616  64                 	db	100	;'d'
   127  000617  61                 	db	97	;'a'
   128  000618  73                 	db	115	;'s'
   129  000619  74                 	db	116	;'t'
   130  00061A  72                 	db	114	;'r'
   131  00061B  61                 	db	97	;'a'
   132  00061C  72                 	db	114	;'r'
   133  00061D  20                 	db	32
   134  00061E  74                 	db	116	;'t'
   135  00061F  61                 	db	97	;'a'
   136  000620  73                 	db	115	;'s'
   137  000621  6B                 	db	107	;'k'
   138  000622  00                 	db	0
   139  000623                     STR_4:
   140  000623  31                 	db	49	;'1'
   141  000624  29                 	db	41
   142  000625  56                 	db	86	;'V'
   143  000626  65                 	db	101	;'e'
   144  000627  72                 	db	114	;'r'
   145  000628  20                 	db	32
   146  000629  64                 	db	100	;'d'
   147  00062A  61                 	db	97	;'a'
   148  00062B  74                 	db	116	;'t'
   149  00062C  61                 	db	97	;'a'
   150  00062D  20                 	db	32
   151  00062E  61                 	db	97	;'a'
   152  00062F  74                 	db	116	;'t'
   153  000630  75                 	db	117	;'u'
   154  000631  61                 	db	97	;'a'
   155  000632  6C                 	db	108	;'l'
   156  000633  00                 	db	0
   157  000634                     STR_7:
   158  000634  35                 	db	53	;'5'
   159  000635  29                 	db	41
   160  000636  50                 	db	80	;'P'
   161  000637  72                 	db	114	;'r'
   162  000638  6F                 	db	111	;'o'
   163  000639  78                 	db	120	;'x'
   164  00063A  69                 	db	105	;'i'
   165  00063B  6D                 	db	109	;'m'
   166  00063C  61                 	db	97	;'a'
   167  00063D  73                 	db	115	;'s'
   168  00063E  20                 	db	32
   169  00063F  74                 	db	116	;'t'
   170  000640  61                 	db	97	;'a'
   171  000641  73                 	db	115	;'s'
   172  000642  6B                 	db	107	;'k'
   173  000643  73                 	db	115	;'s'
   174  000644  00                 	db	0
   175  000645                     STR_14:
   176  000645  2D                 	db	45
   177  000646  55                 	db	85	;'U'
   178  000647  73                 	db	115	;'s'
   179  000648  65                 	db	101	;'e'
   180  000649  20                 	db	32
   181  00064A  6F                 	db	111	;'o'
   182  00064B  20                 	db	32
   183  00064C  73                 	db	115	;'s'
   184  00064D  65                 	db	101	;'e'
   185  00064E  72                 	db	114	;'r'
   186  00064F  69                 	db	105	;'i'
   187  000650  61                 	db	97	;'a'
   188  000651  6C                 	db	108	;'l'
   189  000652  2D                 	db	45
   190  000653  00                 	db	0
   191  000654                     STR_16:
   192  000654  54                 	db	84	;'T'
   193  000655  65                 	db	101	;'e'
   194  000656  72                 	db	114	;'r'
   195  000657  6D                 	db	109	;'m'
   196  000658  69                 	db	105	;'i'
   197  000659  6E                 	db	110	;'n'
   198  00065A  65                 	db	101	;'e'
   199  00065B  20                 	db	32
   200  00065C  63                 	db	99	;'c'
   201  00065D  6F                 	db	111	;'o'
   202  00065E  6D                 	db	109	;'m'
   203  00065F  20                 	db	32
   204  000660  2A                 	db	42
   205  000661  00                 	db	0
   206  000662                     STR_6:
   207  000662  33                 	db	51	;'3'
   208  000663  29                 	db	41
   209  000664  4D                 	db	77	;'M'
   210  000665  61                 	db	97	;'a'
   211  000666  69                 	db	105	;'i'
   212  000667  73                 	db	115	;'s'
   213  000668  20                 	db	32
   214  000669  6F                 	db	111	;'o'
   215  00066A  70                 	db	112	;'p'
   216  00066B  63                 	db	99	;'c'
   217  00066C  6F                 	db	111	;'o'
   218  00066D  65                 	db	101	;'e'
   219  00066E  73                 	db	115	;'s'
   220  00066F  00                 	db	0
   221  000670                     STR_15:
   222  000670  43                 	db	67	;'C'
   223  000671  6F                 	db	111	;'o'
   224  000672  6E                 	db	110	;'n'
   225  000673  66                 	db	102	;'f'
   226  000674  69                 	db	105	;'i'
   227  000675  72                 	db	114	;'r'
   228  000676  6D                 	db	109	;'m'
   229  000677  65                 	db	101	;'e'
   230  000678  20                 	db	32
   231  000679  28                 	db	40
   232  00067A  32                 	db	50	;'2'
   233  00067B  29                 	db	41
   234  00067C  00                 	db	0
   235  00067D                     STR_1:
   236  00067D  42                 	db	66	;'B'
   237  00067E  65                 	db	101	;'e'
   238  00067F  6D                 	db	109	;'m'
   239  000680  20                 	db	32
   240  000681  76                 	db	118	;'v'
   241  000682  69                 	db	105	;'i'
   242  000683  6E                 	db	110	;'n'
   243  000684  64                 	db	100	;'d'
   244  000685  6F                 	db	111	;'o'
   245  000686  20                 	db	32
   246  000687  61                 	db	97	;'a'
   247  000688  6F                 	db	111	;'o'
   248  000689  00                 	db	0
   249  00068A                     STR_13:
   250  00068A  44                 	db	68	;'D'
   251  00068B  61                 	db	97	;'a'
   252  00068C  74                 	db	116	;'t'
   253  00068D  61                 	db	97	;'a'
   254  00068E  20                 	db	32
   255  00068F  61                 	db	97	;'a'
   256  000690  74                 	db	116	;'t'
   257  000691  75                 	db	117	;'u'
   258  000692  61                 	db	97	;'a'
   259  000693  6C                 	db	108	;'l'
   260  000694  3A                 	db	58	;':'
   261  000695  00                 	db	0
   262  000696                     STR_2:
   263  000696  4B                 	db	75	;'K'
   264  000697  68                 	db	104	;'h'
   265  000698  61                 	db	97	;'a'
   266  000699  6E                 	db	110	;'n'
   267  00069A  62                 	db	98	;'b'
   268  00069B  61                 	db	97	;'a'
   269  00069C  6E                 	db	110	;'n'
   270  00069D  21                 	db	33
   271  00069E  00                 	db	0
   272  00069F                     STR_3:
   273  00069F  45                 	db	69	;'E'
   274  0006A0  73                 	db	115	;'s'
   275  0006A1  63                 	db	99	;'c'
   276  0006A2  6F                 	db	111	;'o'
   277  0006A3  6C                 	db	108	;'l'
   278  0006A4  68                 	db	104	;'h'
   279  0006A5  61                 	db	97	;'a'
   280  0006A6  3A                 	db	58	;':'
   281  0006A7  00                 	db	0
   282  0006A8                     STR_8:
   283  0006A8  2A                 	db	42
   284  0006A9  29                 	db	41
   285  0006AA  56                 	db	86	;'V'
   286  0006AB  6F                 	db	111	;'o'
   287  0006AC  6C                 	db	108	;'l'
   288  0006AD  74                 	db	116	;'t'
   289  0006AE  61                 	db	97	;'a'
   290  0006AF  72                 	db	114	;'r'
   291  0006B0  00                 	db	0
   292  0006B1                     STR_10:
   293  0006B1  31                 	db	49	;'1'
   294  0006B2  29                 	db	41
   295  0006B3  00                 	db	0
   296  0006B4                     STR_12:
   297  0006B4  33                 	db	51	;'3'
   298  0006B5  29                 	db	41
   299  0006B6  00                 	db	0
   300  0006B7  00                 	db	0	; dummy byte at the end
   301  0000                     
   302                           ; #config settings
   303                           
   304                           	psect	cinit
   305  0012D2                     __pcinit:
   306                           	callstack 0
   307  0012D2                     start_initialization:
   308                           	callstack 0
   309  0012D2                     __initialization:
   310                           	callstack 0
   311                           
   312                           ; Clear objects allocated to COMRAM (27 bytes)
   313  0012D2  EE00  F04F         	lfsr	0,__pbssCOMRAM
   314  0012D6  0E1B               	movlw	27
   315  0012D8                     clear_0:
   316  0012D8  6AEE               	clrf	postinc0,c
   317  0012DA  06E8               	decf	wreg,f,c
   318  0012DC  E1FD               	bnz	clear_0
   319  0012DE                     end_of_initialization:
   320                           	callstack 0
   321  0012DE                     __end_of__initialization:
   322                           	callstack 0
   323  0012DE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   324  0012E0  6EF8               	movwf	tblptru,c
   325  0012E2  0100               	movlb	0
   326  0012E4  EF5C  F003         	goto	_main	;jump to C main() function
   327                           
   328                           	psect	bssCOMRAM
   329  00004F                     __pbssCOMRAM:
   330                           	callstack 0
   331  00004F                     _time:
   332                           	callstack 0
   333  00004F                     	ds	10
   334  000059                     kpDebounce@valorAntigo:
   335                           	callstack 0
   336  000059                     	ds	2
   337  00005B                     kpDebounce@valorNovo:
   338                           	callstack 0
   339  00005B                     	ds	2
   340  00005D                     _valor:
   341                           	callstack 0
   342  00005D                     	ds	2
   343  00005F                     kpDebounce@tempo:
   344                           	callstack 0
   345  00005F                     	ds	1
   346  000060                     _date:
   347                           	callstack 0
   348  000060                     	ds	10
   349                           
   350                           	psect	cstackCOMRAM
   351  000001                     __pcstackCOMRAM:
   352                           	callstack 0
   353  000001                     ??_kpDebounce:
   354  000001                     ?_kpRead:
   355                           	callstack 0
   356  000001                     ?___aldiv:
   357                           	callstack 0
   358  000001                     lcd_wr@val:
   359                           	callstack 0
   360  000001                     serialRead@resp:
   361                           	callstack 0
   362  000001                     getd@nn:
   363                           	callstack 0
   364  000001                     getu@nn:
   365                           	callstack 0
   366  000001                     atraso_ms@valor:
   367                           	callstack 0
   368  000001                     delay@i:
   369                           	callstack 0
   370  000001                     ___aldiv@dividend:
   371                           	callstack 0
   372                           
   373                           ; 4 bytes @ 0x0
   374  000001                     	ds	2
   375  000003                     delay@j:
   376                           	callstack 0
   377  000003                     atraso_ms@i:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x2
   381  000003                     	ds	1
   382  000004                     delay@k:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x3
   386  000004                     	ds	1
   387  000005                     ??_i2c_wb:
   388  000005                     ??_i2c_rb:
   389  000005                     atraso_ms@j:
   390                           	callstack 0
   391  000005                     ___aldiv@divisor:
   392                           	callstack 0
   393                           
   394                           ; 4 bytes @ 0x4
   395  000005                     	ds	1
   396  000006                     atraso_ms@k:
   397                           	callstack 0
   398  000006                     kpDebounce@old_D:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x5
   402  000006                     	ds	1
   403  000007                     lcd_cmd@val:
   404                           	callstack 0
   405  000007                     lcd_dat@val:
   406                           	callstack 0
   407  000007                     i2c_wb@val:
   408                           	callstack 0
   409  000007                     i2c_rb@ack:
   410                           	callstack 0
   411  000007                     kpDebounce@k:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x6
   415  000007                     	ds	1
   416  000008                     i2c_wb@i:
   417                           	callstack 0
   418  000008                     i2c_rb@ret:
   419                           	callstack 0
   420  000008                     lcd_str@str:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x7
   424  000008                     	ds	1
   425  000009                     kpDebounce@j:
   426                           	callstack 0
   427  000009                     i2c_rb@i:
   428                           	callstack 0
   429  000009                     ___aldiv@counter:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x8
   433  000009                     	ds	1
   434  00000A                     ??_lcd_str:
   435  00000A                     kpDebounce@i:
   436                           	callstack 0
   437  00000A                     rtc_r@tmp:
   438                           	callstack 0
   439  00000A                     ___aldiv@sign:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x9
   443  00000A                     	ds	1
   444  00000B                     ___aldiv@quotient:
   445                           	callstack 0
   446                           
   447                           ; 4 bytes @ 0xA
   448  00000B                     	ds	1
   449  00000C                     lcd_str@i:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0xB
   453  00000C                     	ds	3
   454  00000F                     pwmFrequency@freq:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0xE
   458  00000F                     	ds	2
   459  000011                     
   460                           ; 1 bytes @ 0x10
   461  000011                     	ds	1
   462  000012                     main@atmp:
   463                           	callstack 0
   464                           
   465                           ; 14 bytes @ 0x11
   466  000012                     	ds	14
   467  000020                     main@btmp:
   468                           	callstack 0
   469                           
   470                           ; 14 bytes @ 0x1F
   471  000020                     	ds	14
   472  00002E                     main@ctmp:
   473                           	callstack 0
   474                           
   475                           ; 14 bytes @ 0x2D
   476  00002E                     	ds	14
   477  00003C                     main@tmp:
   478                           	callstack 0
   479                           
   480                           ; 14 bytes @ 0x3B
   481  00003C                     	ds	14
   482  00004A                     main@k:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x49
   486  00004A                     	ds	1
   487  00004B                     main@cont:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0x4A
   491  00004B                     	ds	1
   492  00004C                     main@tecla:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x4B
   496  00004C                     	ds	2
   497  00004E                     main@i:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x4D
   501  00004E                     	ds	1
   502                           
   503 ;;
   504 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   505 ;;
   506 ;; *************** function _main *****************
   507 ;; Defined at:
   508 ;;		line 11 in file "main.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;		None
   511 ;; Auto vars:     Size  Location     Type
   512 ;;  tmp            14   59[COMRAM] unsigned char [14]
   513 ;;  ctmp           14   45[COMRAM] unsigned char [14]
   514 ;;  btmp           14   31[COMRAM] unsigned char [14]
   515 ;;  atmp           14   17[COMRAM] unsigned char [14]
   516 ;;  tecla           2   75[COMRAM] unsigned int 
   517 ;;  i               1   77[COMRAM] unsigned char 
   518 ;;  j               1    0        unsigned char 
   519 ;;  cont            1   74[COMRAM] unsigned char 
   520 ;;  k               1   73[COMRAM] unsigned char 
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   530 ;;      Params:         0       0       0       0       0       0       0
   531 ;;      Locals:        61       0       0       0       0       0       0
   532 ;;      Temps:          1       0       0       0       0       0       0
   533 ;;      Totals:        62       0       0       0       0       0       0
   534 ;;Total ram usage:       62 bytes
   535 ;; Hardware stack levels required when called: 3
   536 ;; This function calls:
   537 ;;		_atraso_ms
   538 ;;		_kpDebounce
   539 ;;		_kpInit
   540 ;;		_kpRead
   541 ;;		_lcd_cmd
   542 ;;		_lcd_dat
   543 ;;		_lcd_init
   544 ;;		_lcd_str
   545 ;;		_pwmFrequency
   546 ;;		_pwmInit
   547 ;;		_rtc_r
   548 ;;		_serialInit
   549 ;;		_serialRead
   550 ;; This function is called by:
   551 ;;		Startup code after reset
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text0
   556  0006B8                     __ptext0:
   557                           	callstack 0
   558  0006B8                     _main:
   559                           	callstack 28
   560  0006B8                     
   561                           ;main.c: 12:  unsigned int tecla = 16;
   562  0006B8  0E00               	movlw	0
   563  0006BA  6E4D               	movwf	(main@tecla+1)^0,c
   564  0006BC  0E10               	movlw	16
   565  0006BE  6E4C               	movwf	main@tecla^0,c
   566                           
   567                           ;main.c: 13:  unsigned char i, cont=0, k, j;
   568  0006C0  0E00               	movlw	0
   569  0006C2  6E4B               	movwf	main@cont^0,c
   570                           
   571                           ;main.c: 14:  unsigned char tmp[14], atmp[14], btmp[14], ctmp[14];;main.c: 16:  ADCON1 =
      +                           0x00;
   572  0006C4  0E00               	movlw	0
   573  0006C6  6EC1               	movwf	193,c	;volatile
   574                           
   575                           ;main.c: 17:  TRISB = 0x01;
   576  0006C8  0E01               	movlw	1
   577  0006CA  6E93               	movwf	147,c	;volatile
   578                           
   579                           ;main.c: 18:  TRISC = 0x00;
   580  0006CC  0E00               	movlw	0
   581  0006CE  6E94               	movwf	148,c	;volatile
   582                           
   583                           ;main.c: 19:  TRISD = 0x00;
   584  0006D0  0E00               	movlw	0
   585  0006D2  6E95               	movwf	149,c	;volatile
   586                           
   587                           ;main.c: 20:  TRISE = 0x00;
   588  0006D4  0E00               	movlw	0
   589  0006D6  6E96               	movwf	150,c	;volatile
   590                           
   591                           ;main.c: 21:  TRISB = 0xF8;
   592  0006D8  0EF8               	movlw	248
   593  0006DA  6E93               	movwf	147,c	;volatile
   594  0006DC                     
   595                           ;main.c: 23:     serialInit();
   596  0006DC  EC4F  F009         	call	_serialInit	;wreg free
   597  0006E0                     
   598                           ;main.c: 24:     lcd_init();
   599  0006E0  ECCE  F008         	call	_lcd_init	;wreg free
   600  0006E4                     
   601                           ;main.c: 25:     pwmInit();
   602  0006E4  EC5C  F009         	call	_pwmInit	;wreg free
   603  0006E8                     
   604                           ;main.c: 27:     lcd_cmd(0x80);
   605  0006E8  0E80               	movlw	128
   606  0006EA  EC27  F009         	call	_lcd_cmd
   607  0006EE                     
   608                           ;main.c: 28:     lcd_str("Bem vindo ao");
   609  0006EE  0E7D               	movlw	low STR_1
   610  0006F0  6E08               	movwf	lcd_str@str^0,c
   611  0006F2  0E06               	movlw	high STR_1
   612  0006F4  6E09               	movwf	(lcd_str@str+1)^0,c
   613  0006F6  EC02  F008         	call	_lcd_str	;wreg free
   614  0006FA                     
   615                           ;main.c: 29:     lcd_cmd(0xC0);
   616  0006FA  0EC0               	movlw	192
   617  0006FC  EC27  F009         	call	_lcd_cmd
   618  000700                     
   619                           ;main.c: 30:     lcd_str("Khanban!");
   620  000700  0E96               	movlw	low STR_2
   621  000702  6E08               	movwf	lcd_str@str^0,c
   622  000704  0E06               	movlw	high STR_2
   623  000706  6E09               	movwf	(lcd_str@str+1)^0,c
   624  000708  EC02  F008         	call	_lcd_str	;wreg free
   625  00070C                     
   626                           ;main.c: 31:     atraso_ms(2000);
   627  00070C  0E07               	movlw	7
   628  00070E  6E02               	movwf	(atraso_ms@valor+1)^0,c
   629  000710  0ED0               	movlw	208
   630  000712  6E01               	movwf	atraso_ms@valor^0,c
   631  000714  EC3E  F008         	call	_atraso_ms	;wreg free
   632  000718                     
   633                           ;main.c: 32:     lcd_cmd(0x01);
   634  000718  0E01               	movlw	1
   635  00071A  EC27  F009         	call	_lcd_cmd
   636  00071E                     
   637                           ;main.c: 33:     kpInit();
   638  00071E  EC94  F009         	call	_kpInit	;wreg free
   639  000722                     
   640                           ;main.c: 34:     pwmFrequency(1800);
   641  000722  0E07               	movlw	7
   642  000724  6E10               	movwf	(pwmFrequency@freq+1)^0,c
   643  000726  0E08               	movlw	8
   644  000728  6E0F               	movwf	pwmFrequency@freq^0,c
   645  00072A  EC3C  F009         	call	_pwmFrequency	;wreg free
   646  00072E                     
   647                           ;main.c: 35:                             for (k = 0; k < 3; k++) {
   648  00072E  0E00               	movlw	0
   649  000730  6E4A               	movwf	main@k^0,c
   650  000732                     l2193:
   651  000732                     
   652                           ;main.c: 37:                                     ((TRISC) |= (1<<(1)));
   653  000732  8294               	bsf	148,1,c	;volatile
   654  000734                     
   655                           ;main.c: 38:                                     atraso_ms(700);
   656  000734  0E02               	movlw	2
   657  000736  6E02               	movwf	(atraso_ms@valor+1)^0,c
   658  000738  0EBC               	movlw	188
   659  00073A  6E01               	movwf	atraso_ms@valor^0,c
   660  00073C  EC3E  F008         	call	_atraso_ms	;wreg free
   661  000740                     
   662                           ;main.c: 41:                                 ((TRISC) &= ~(1<<(1)));
   663  000740  9294               	bcf	148,1,c	;volatile
   664                           
   665                           ;main.c: 42:                             }
   666  000742  2A4A               	incf	main@k^0,f,c
   667  000744  0E02               	movlw	2
   668  000746  644A               	cpfsgt	main@k^0,c
   669  000748  EFA8  F003         	goto	u1471
   670  00074C  EFAA  F003         	goto	u1470
   671  000750                     u1471:
   672  000750  EF99  F003         	goto	l2193
   673  000754                     u1470:
   674  000754                     
   675                           ;main.c: 43:                             PORTB = 0x00;
   676  000754  0E00               	movlw	0
   677  000756  6E81               	movwf	129,c	;volatile
   678                           
   679                           ;main.c: 44:                             PORTD = 0x00;
   680  000758  0E00               	movlw	0
   681  00075A  6E83               	movwf	131,c	;volatile
   682  00075C                     l2211:
   683                           
   684                           ;main.c: 47:         kpDebounce();
   685  00075C  EC12  F006         	call	_kpDebounce	;wreg free
   686  000760                     
   687                           ;main.c: 48:         if (kpRead() != tecla){
   688  000760  EC8F  F009         	call	_kpRead	;wreg free
   689  000764  504C               	movf	main@tecla^0,w,c
   690  000766  1801               	xorwf	?_kpRead^0,w,c
   691  000768  E109               	bnz	u1480
   692  00076A  504D               	movf	(main@tecla+1)^0,w,c
   693  00076C  1802               	xorwf	(?_kpRead+1)^0,w,c
   694  00076E  B4D8               	btfsc	status,2,c
   695  000770  EFBC  F003         	goto	u1481
   696  000774  EFBE  F003         	goto	u1480
   697  000778                     u1481:
   698  000778  EFAE  F003         	goto	l2211
   699  00077C                     u1480:
   700  00077C                     
   701                           ;main.c: 49:             tecla = kpRead();
   702  00077C  EC8F  F009         	call	_kpRead	;wreg free
   703  000780  C001  F04C         	movff	?_kpRead,main@tecla
   704  000784  C002  F04D         	movff	?_kpRead+1,main@tecla+1
   705  000788                     
   706                           ;main.c: 50:             lcd_cmd(0x01);
   707  000788  0E01               	movlw	1
   708  00078A  EC27  F009         	call	_lcd_cmd
   709  00078E                     
   710                           ;main.c: 51:             lcd_cmd(0x80);
   711  00078E  0E80               	movlw	128
   712  000790  EC27  F009         	call	_lcd_cmd
   713  000794                     
   714                           ;main.c: 52:             lcd_str("Escolha:");
   715  000794  0E9F               	movlw	low STR_3
   716  000796  6E08               	movwf	lcd_str@str^0,c
   717  000798  0E06               	movlw	high STR_3
   718  00079A  6E09               	movwf	(lcd_str@str+1)^0,c
   719  00079C  EC02  F008         	call	_lcd_str	;wreg free
   720  0007A0                     
   721                           ;main.c: 53:             lcd_cmd(0xC0);
   722  0007A0  0EC0               	movlw	192
   723  0007A2  EC27  F009         	call	_lcd_cmd
   724  0007A6                     
   725                           ;main.c: 54:             lcd_str("1)Ver data atual");
   726  0007A6  0E23               	movlw	low STR_4
   727  0007A8  6E08               	movwf	lcd_str@str^0,c
   728  0007AA  0E06               	movlw	high STR_4
   729  0007AC  6E09               	movwf	(lcd_str@str+1)^0,c
   730  0007AE  EC02  F008         	call	_lcd_str	;wreg free
   731  0007B2                     
   732                           ;main.c: 55:             lcd_cmd(0x90);
   733  0007B2  0E90               	movlw	144
   734  0007B4  EC27  F009         	call	_lcd_cmd
   735  0007B8                     
   736                           ;main.c: 56:             lcd_str("2)Cadastrar task");
   737  0007B8  0E12               	movlw	low STR_5
   738  0007BA  6E08               	movwf	lcd_str@str^0,c
   739  0007BC  0E06               	movlw	high STR_5
   740  0007BE  6E09               	movwf	(lcd_str@str+1)^0,c
   741  0007C0  EC02  F008         	call	_lcd_str	;wreg free
   742  0007C4                     
   743                           ;main.c: 57:             lcd_cmd(0xD0);
   744  0007C4  0ED0               	movlw	208
   745  0007C6  EC27  F009         	call	_lcd_cmd
   746  0007CA                     
   747                           ;main.c: 58:             lcd_str("3)Mais opcoes");
   748  0007CA  0E62               	movlw	low STR_6
   749  0007CC  6E08               	movwf	lcd_str@str^0,c
   750  0007CE  0E06               	movlw	high STR_6
   751  0007D0  6E09               	movwf	(lcd_str@str+1)^0,c
   752  0007D2  EC02  F008         	call	_lcd_str	;wreg free
   753  0007D6                     
   754                           ;main.c: 59:                 if(((tecla) & (1<<(11)))){
   755  0007D6  A64D               	btfss	(main@tecla+1)^0,3,c
   756  0007D8  EFF0  F003         	goto	u1491
   757  0007DC  EFF2  F003         	goto	u1490
   758  0007E0                     u1491:
   759  0007E0  EFCF  F004         	goto	l57
   760  0007E4                     u1490:
   761  0007E4  EFC8  F004         	goto	l2321
   762  0007E8                     l2239:
   763                           
   764                           ;main.c: 61:                         kpDebounce();
   765  0007E8  EC12  F006         	call	_kpDebounce	;wreg free
   766  0007EC                     
   767                           ;main.c: 62:                         if (kpRead() != tecla){
   768  0007EC  EC8F  F009         	call	_kpRead	;wreg free
   769  0007F0  504C               	movf	main@tecla^0,w,c
   770  0007F2  1801               	xorwf	?_kpRead^0,w,c
   771  0007F4  E109               	bnz	u1500
   772  0007F6  504D               	movf	(main@tecla+1)^0,w,c
   773  0007F8  1802               	xorwf	(?_kpRead+1)^0,w,c
   774  0007FA  B4D8               	btfsc	status,2,c
   775  0007FC  EF02  F004         	goto	u1501
   776  000800  EF04  F004         	goto	u1500
   777  000804                     u1501:
   778  000804  EFC8  F004         	goto	l2321
   779  000808                     u1500:
   780  000808                     
   781                           ;main.c: 63:                             tecla = kpRead();
   782  000808  EC8F  F009         	call	_kpRead	;wreg free
   783  00080C  C001  F04C         	movff	?_kpRead,main@tecla
   784  000810  C002  F04D         	movff	?_kpRead+1,main@tecla+1
   785  000814                     
   786                           ;main.c: 64:                             lcd_cmd(0x01);
   787  000814  0E01               	movlw	1
   788  000816  EC27  F009         	call	_lcd_cmd
   789  00081A                     
   790                           ;main.c: 65:                             lcd_cmd(0x80);
   791  00081A  0E80               	movlw	128
   792  00081C  EC27  F009         	call	_lcd_cmd
   793  000820                     
   794                           ;main.c: 66:                             lcd_str("5)Proximas tasks");
   795  000820  0E34               	movlw	low STR_7
   796  000822  6E08               	movwf	lcd_str@str^0,c
   797  000824  0E06               	movlw	high STR_7
   798  000826  6E09               	movwf	(lcd_str@str+1)^0,c
   799  000828  EC02  F008         	call	_lcd_str	;wreg free
   800  00082C                     
   801                           ;main.c: 67:                             lcd_cmd(0xC0);
   802  00082C  0EC0               	movlw	192
   803  00082E  EC27  F009         	call	_lcd_cmd
   804  000832                     
   805                           ;main.c: 68:                             lcd_str("*)Voltar");
   806  000832  0EA8               	movlw	low STR_8
   807  000834  6E08               	movwf	lcd_str@str^0,c
   808  000836  0E06               	movlw	high STR_8
   809  000838  6E09               	movwf	(lcd_str@str+1)^0,c
   810  00083A  EC02  F008         	call	_lcd_str	;wreg free
   811  00083E                     
   812                           ;main.c: 70:                             if(((tecla) & (1<<(6)))){
   813  00083E  AC4C               	btfss	main@tecla^0,6,c
   814  000840  EF24  F004         	goto	u1511
   815  000844  EF26  F004         	goto	u1510
   816  000848                     u1511:
   817  000848  EFC8  F004         	goto	l2321
   818  00084C                     u1510:
   819  00084C                     
   820                           ;main.c: 71:                                 lcd_cmd(0x01);
   821  00084C  0E01               	movlw	1
   822  00084E  EC27  F009         	call	_lcd_cmd
   823                           
   824                           ;main.c: 72:                                 lcd_cmd(0x80);
   825  000852  0E80               	movlw	128
   826  000854  EC27  F009         	call	_lcd_cmd
   827  000858                     
   828                           ;main.c: 73:                                 lcd_str("-Proximas tasks-");
   829  000858  0E01               	movlw	low STR_9
   830  00085A  6E08               	movwf	lcd_str@str^0,c
   831  00085C  0E06               	movlw	high STR_9
   832  00085E  6E09               	movwf	(lcd_str@str+1)^0,c
   833  000860  EC02  F008         	call	_lcd_str	;wreg free
   834  000864                     
   835                           ;main.c: 74:                                 lcd_cmd(0xC0);
   836  000864  0EC0               	movlw	192
   837  000866  EC27  F009         	call	_lcd_cmd
   838                           
   839                           ;main.c: 75:                                 lcd_str("1)");
   840  00086A  0EB1               	movlw	low STR_10
   841  00086C  6E08               	movwf	lcd_str@str^0,c
   842  00086E  0E06               	movlw	high STR_10
   843  000870  6E09               	movwf	(lcd_str@str+1)^0,c
   844  000872  EC02  F008         	call	_lcd_str	;wreg free
   845  000876                     
   846                           ;main.c: 76:                                     for(i=0;i<14;i++){
   847  000876  0E00               	movlw	0
   848  000878  6E4E               	movwf	main@i^0,c
   849  00087A                     l2269:
   850                           
   851                           ;main.c: 77:                                        if(atmp[i]=='*'){
   852  00087A  0E12               	movlw	low main@atmp
   853  00087C  244E               	addwf	main@i^0,w,c
   854  00087E  6ED9               	movwf	fsr2l,c
   855  000880  6ADA               	clrf	fsr2h,c
   856  000882  0E00               	movlw	high main@atmp
   857  000884  22DA               	addwfc	fsr2h,f,c
   858  000886  0E2A               	movlw	42
   859  000888  18DE               	xorwf	postinc2,w,c
   860  00088A  A4D8               	btfss	status,2,c
   861  00088C  EF4A  F004         	goto	u1521
   862  000890  EF4C  F004         	goto	u1520
   863  000894                     u1521:
   864  000894  EF50  F004         	goto	l2273
   865  000898                     u1520:
   866  000898                     
   867                           ;main.c: 78:                                            i=14;
   868  000898  0E0E               	movlw	14
   869  00089A  6E4E               	movwf	main@i^0,c
   870                           
   871                           ;main.c: 79:                                        }
   872  00089C  EF59  F004         	goto	l2275
   873  0008A0                     l2273:
   874  0008A0  0E12               	movlw	low main@atmp
   875  0008A2  244E               	addwf	main@i^0,w,c
   876  0008A4  6ED9               	movwf	fsr2l,c
   877  0008A6  6ADA               	clrf	fsr2h,c
   878  0008A8  0E00               	movlw	high main@atmp
   879  0008AA  22DA               	addwfc	fsr2h,f,c
   880  0008AC  50DF               	movf	indf2,w,c
   881  0008AE  EC12  F009         	call	_lcd_dat
   882  0008B2                     l2275:
   883                           
   884                           ;main.c: 81:                                     }
   885  0008B2  2A4E               	incf	main@i^0,f,c
   886  0008B4  0E0D               	movlw	13
   887  0008B6  644E               	cpfsgt	main@i^0,c
   888  0008B8  EF60  F004         	goto	u1531
   889  0008BC  EF62  F004         	goto	u1530
   890  0008C0                     u1531:
   891  0008C0  EF3D  F004         	goto	l2269
   892  0008C4                     u1530:
   893  0008C4                     
   894                           ;main.c: 82:                                 lcd_cmd(0x90);
   895  0008C4  0E90               	movlw	144
   896  0008C6  EC27  F009         	call	_lcd_cmd
   897  0008CA                     
   898                           ;main.c: 83:                                 lcd_str("2)");
   899  0008CA  0E7A               	movlw	low (STR_15+10)
   900  0008CC  6E08               	movwf	lcd_str@str^0,c
   901  0008CE  0E06               	movlw	high (STR_15+10)
   902  0008D0  6E09               	movwf	(lcd_str@str+1)^0,c
   903  0008D2  EC02  F008         	call	_lcd_str	;wreg free
   904  0008D6                     
   905                           ;main.c: 84:                                     for(i=0;i<14;i++){
   906  0008D6  0E00               	movlw	0
   907  0008D8  6E4E               	movwf	main@i^0,c
   908  0008DA                     l2289:
   909                           
   910                           ;main.c: 85:                                        if(btmp[i]=='*'){
   911  0008DA  0E20               	movlw	low main@btmp
   912  0008DC  244E               	addwf	main@i^0,w,c
   913  0008DE  6ED9               	movwf	fsr2l,c
   914  0008E0  6ADA               	clrf	fsr2h,c
   915  0008E2  0E00               	movlw	high main@btmp
   916  0008E4  22DA               	addwfc	fsr2h,f,c
   917  0008E6  0E2A               	movlw	42
   918  0008E8  18DE               	xorwf	postinc2,w,c
   919  0008EA  A4D8               	btfss	status,2,c
   920  0008EC  EF7A  F004         	goto	u1541
   921  0008F0  EF7C  F004         	goto	u1540
   922  0008F4                     u1541:
   923  0008F4  EF80  F004         	goto	l2293
   924  0008F8                     u1540:
   925  0008F8                     
   926                           ;main.c: 86:                                            i=14;
   927  0008F8  0E0E               	movlw	14
   928  0008FA  6E4E               	movwf	main@i^0,c
   929                           
   930                           ;main.c: 87:                                        }
   931  0008FC  EF89  F004         	goto	l2295
   932  000900                     l2293:
   933  000900  0E20               	movlw	low main@btmp
   934  000902  244E               	addwf	main@i^0,w,c
   935  000904  6ED9               	movwf	fsr2l,c
   936  000906  6ADA               	clrf	fsr2h,c
   937  000908  0E00               	movlw	high main@btmp
   938  00090A  22DA               	addwfc	fsr2h,f,c
   939  00090C  50DF               	movf	indf2,w,c
   940  00090E  EC12  F009         	call	_lcd_dat
   941  000912                     l2295:
   942                           
   943                           ;main.c: 89:                                     }
   944  000912  2A4E               	incf	main@i^0,f,c
   945  000914  0E0D               	movlw	13
   946  000916  644E               	cpfsgt	main@i^0,c
   947  000918  EF90  F004         	goto	u1551
   948  00091C  EF92  F004         	goto	u1550
   949  000920                     u1551:
   950  000920  EF6D  F004         	goto	l2289
   951  000924                     u1550:
   952  000924                     
   953                           ;main.c: 90:                                 lcd_cmd(0xD0);
   954  000924  0ED0               	movlw	208
   955  000926  EC27  F009         	call	_lcd_cmd
   956  00092A                     
   957                           ;main.c: 91:                                 lcd_str("3)");
   958  00092A  0EB4               	movlw	low STR_12
   959  00092C  6E08               	movwf	lcd_str@str^0,c
   960  00092E  0E06               	movlw	high STR_12
   961  000930  6E09               	movwf	(lcd_str@str+1)^0,c
   962  000932  EC02  F008         	call	_lcd_str	;wreg free
   963  000936                     
   964                           ;main.c: 92:                                     for(i=0;i<14;i++){
   965  000936  0E00               	movlw	0
   966  000938  6E4E               	movwf	main@i^0,c
   967  00093A                     l2309:
   968                           
   969                           ;main.c: 93:                                        if(ctmp[i]=='*'){
   970  00093A  0E2E               	movlw	low main@ctmp
   971  00093C  244E               	addwf	main@i^0,w,c
   972  00093E  6ED9               	movwf	fsr2l,c
   973  000940  6ADA               	clrf	fsr2h,c
   974  000942  0E00               	movlw	high main@ctmp
   975  000944  22DA               	addwfc	fsr2h,f,c
   976  000946  0E2A               	movlw	42
   977  000948  18DE               	xorwf	postinc2,w,c
   978  00094A  A4D8               	btfss	status,2,c
   979  00094C  EFAA  F004         	goto	u1561
   980  000950  EFAC  F004         	goto	u1560
   981  000954                     u1561:
   982  000954  EFB0  F004         	goto	l2313
   983  000958                     u1560:
   984  000958                     
   985                           ;main.c: 94:                                            i=14;
   986  000958  0E0E               	movlw	14
   987  00095A  6E4E               	movwf	main@i^0,c
   988                           
   989                           ;main.c: 95:                                        }
   990  00095C  EFB9  F004         	goto	l2315
   991  000960                     l2313:
   992  000960  0E2E               	movlw	low main@ctmp
   993  000962  244E               	addwf	main@i^0,w,c
   994  000964  6ED9               	movwf	fsr2l,c
   995  000966  6ADA               	clrf	fsr2h,c
   996  000968  0E00               	movlw	high main@ctmp
   997  00096A  22DA               	addwfc	fsr2h,f,c
   998  00096C  50DF               	movf	indf2,w,c
   999  00096E  EC12  F009         	call	_lcd_dat
  1000  000972                     l2315:
  1001                           
  1002                           ;main.c: 97:                                     }
  1003  000972  2A4E               	incf	main@i^0,f,c
  1004  000974  0E0D               	movlw	13
  1005  000976  644E               	cpfsgt	main@i^0,c
  1006  000978  EFC0  F004         	goto	u1571
  1007  00097C  EFC2  F004         	goto	u1570
  1008  000980                     u1571:
  1009  000980  EF9D  F004         	goto	l2309
  1010  000984                     u1570:
  1011  000984                     
  1012                           ;main.c: 98:                                 atraso_ms(5000);
  1013  000984  0E13               	movlw	19
  1014  000986  6E02               	movwf	(atraso_ms@valor+1)^0,c
  1015  000988  0E88               	movlw	136
  1016  00098A  6E01               	movwf	atraso_ms@valor^0,c
  1017  00098C  EC3E  F008         	call	_atraso_ms	;wreg free
  1018  000990                     l2321:
  1019                           
  1020                           ;main.c: 60:                     while(!((tecla) & (1<<(0)))){
  1021  000990  A04C               	btfss	main@tecla^0,0,c
  1022  000992  EFCD  F004         	goto	u1581
  1023  000996  EFCF  F004         	goto	u1580
  1024  00099A                     u1581:
  1025  00099A  EFF4  F003         	goto	l2239
  1026  00099E                     u1580:
  1027  00099E                     l57:
  1028                           
  1029                           ;main.c: 103:             if(((tecla) & (1<<(3)))){
  1030  00099E  A64C               	btfss	main@tecla^0,3,c
  1031  0009A0  EFD4  F004         	goto	u1591
  1032  0009A4  EFD6  F004         	goto	u1590
  1033  0009A8                     u1591:
  1034  0009A8  EFF3  F004         	goto	l2333
  1035  0009AC                     u1590:
  1036  0009AC                     
  1037                           ;main.c: 104:                 lcd_cmd(0x01);
  1038  0009AC  0E01               	movlw	1
  1039  0009AE  EC27  F009         	call	_lcd_cmd
  1040                           
  1041                           ;main.c: 105:                 lcd_cmd(0x80);
  1042  0009B2  0E80               	movlw	128
  1043  0009B4  EC27  F009         	call	_lcd_cmd
  1044  0009B8                     
  1045                           ;main.c: 106:                 lcd_str("Data atual:");
  1046  0009B8  0E8A               	movlw	low STR_13
  1047  0009BA  6E08               	movwf	lcd_str@str^0,c
  1048  0009BC  0E06               	movlw	high STR_13
  1049  0009BE  6E09               	movwf	(lcd_str@str+1)^0,c
  1050  0009C0  EC02  F008         	call	_lcd_str	;wreg free
  1051  0009C4                     
  1052                           ;main.c: 107:                 lcd_cmd(0xC0);
  1053  0009C4  0EC0               	movlw	192
  1054  0009C6  EC27  F009         	call	_lcd_cmd
  1055  0009CA                     
  1056                           ;main.c: 108:                 rtc_r();
  1057  0009CA  EC55  F007         	call	_rtc_r	;wreg free
  1058  0009CE                     
  1059                           ;main.c: 109:                 lcd_str((const char*)date);
  1060  0009CE  0E60               	movlw	low _date
  1061  0009D0  6E08               	movwf	lcd_str@str^0,c
  1062  0009D2  0E00               	movlw	high _date
  1063  0009D4  6E09               	movwf	(lcd_str@str+1)^0,c
  1064  0009D6  EC02  F008         	call	_lcd_str	;wreg free
  1065                           
  1066                           ;main.c: 110:                 atraso_ms(3000);
  1067  0009DA  0E0B               	movlw	11
  1068  0009DC  6E02               	movwf	(atraso_ms@valor+1)^0,c
  1069  0009DE  0EB8               	movlw	184
  1070  0009E0  6E01               	movwf	atraso_ms@valor^0,c
  1071  0009E2  EC3E  F008         	call	_atraso_ms	;wreg free
  1072  0009E6                     l2333:
  1073                           
  1074                           ;main.c: 112:             if(((tecla) & (1<<(7)))){
  1075  0009E6  AE4C               	btfss	main@tecla^0,7,c
  1076  0009E8  EFF8  F004         	goto	u1601
  1077  0009EC  EFFA  F004         	goto	u1600
  1078  0009F0                     u1601:
  1079  0009F0  EFAE  F003         	goto	l2211
  1080  0009F4                     u1600:
  1081  0009F4                     
  1082                           ;main.c: 113:                 cont ++;
  1083  0009F4  2A4B               	incf	main@cont^0,f,c
  1084                           
  1085                           ;main.c: 114:                 while(!((tecla) & (1<<(0)))){
  1086  0009F6  EF07  F006         	goto	l77
  1087  0009FA                     l2337:
  1088                           
  1089                           ;main.c: 115:                     kpDebounce();
  1090  0009FA  EC12  F006         	call	_kpDebounce	;wreg free
  1091  0009FE                     
  1092                           ;main.c: 116:                     if (kpRead() != tecla){
  1093  0009FE  EC8F  F009         	call	_kpRead	;wreg free
  1094  000A02  504C               	movf	main@tecla^0,w,c
  1095  000A04  1801               	xorwf	?_kpRead^0,w,c
  1096  000A06  E109               	bnz	u1610
  1097  000A08  504D               	movf	(main@tecla+1)^0,w,c
  1098  000A0A  1802               	xorwf	(?_kpRead+1)^0,w,c
  1099  000A0C  B4D8               	btfsc	status,2,c
  1100  000A0E  EF0B  F005         	goto	u1611
  1101  000A12  EF0D  F005         	goto	u1610
  1102  000A16                     u1611:
  1103  000A16  EF07  F006         	goto	l77
  1104  000A1A                     u1610:
  1105  000A1A                     
  1106                           ;main.c: 117:                         tecla = kpRead();
  1107  000A1A  EC8F  F009         	call	_kpRead	;wreg free
  1108  000A1E  C001  F04C         	movff	?_kpRead,main@tecla
  1109  000A22  C002  F04D         	movff	?_kpRead+1,main@tecla+1
  1110  000A26                     
  1111                           ;main.c: 118:                         lcd_cmd(0x01);
  1112  000A26  0E01               	movlw	1
  1113  000A28  EC27  F009         	call	_lcd_cmd
  1114  000A2C                     
  1115                           ;main.c: 119:                         lcd_cmd(0x80);
  1116  000A2C  0E80               	movlw	128
  1117  000A2E  EC27  F009         	call	_lcd_cmd
  1118  000A32                     
  1119                           ;main.c: 120:                         lcd_str("-Use o serial-");
  1120  000A32  0E45               	movlw	low STR_14
  1121  000A34  6E08               	movwf	lcd_str@str^0,c
  1122  000A36  0E06               	movlw	high STR_14
  1123  000A38  6E09               	movwf	(lcd_str@str+1)^0,c
  1124  000A3A  EC02  F008         	call	_lcd_str	;wreg free
  1125  000A3E                     
  1126                           ;main.c: 121:                         lcd_cmd(0xC0);
  1127  000A3E  0EC0               	movlw	192
  1128  000A40  EC27  F009         	call	_lcd_cmd
  1129  000A44                     
  1130                           ;main.c: 122:                         lcd_str("Confirme (2)");
  1131  000A44  0E70               	movlw	low STR_15
  1132  000A46  6E08               	movwf	lcd_str@str^0,c
  1133  000A48  0E06               	movlw	high STR_15
  1134  000A4A  6E09               	movwf	(lcd_str@str+1)^0,c
  1135  000A4C  EC02  F008         	call	_lcd_str	;wreg free
  1136  000A50                     
  1137                           ;main.c: 123:                         lcd_cmd(0x90);
  1138  000A50  0E90               	movlw	144
  1139  000A52  EC27  F009         	call	_lcd_cmd
  1140  000A56                     
  1141                           ;main.c: 124:                         lcd_str("Termine com *");
  1142  000A56  0E54               	movlw	low STR_16
  1143  000A58  6E08               	movwf	lcd_str@str^0,c
  1144  000A5A  0E06               	movlw	high STR_16
  1145  000A5C  6E09               	movwf	(lcd_str@str+1)^0,c
  1146  000A5E  EC02  F008         	call	_lcd_str	;wreg free
  1147  000A62                     
  1148                           ;main.c: 125:                         lcd_cmd(0xD0);
  1149  000A62  0ED0               	movlw	208
  1150  000A64  EC27  F009         	call	_lcd_cmd
  1151  000A68                     
  1152                           ;main.c: 126:                         lcd_str("*)Voltar");
  1153  000A68  0EA8               	movlw	low STR_8
  1154  000A6A  6E08               	movwf	lcd_str@str^0,c
  1155  000A6C  0E06               	movlw	high STR_8
  1156  000A6E  6E09               	movwf	(lcd_str@str+1)^0,c
  1157  000A70  EC02  F008         	call	_lcd_str	;wreg free
  1158  000A74                     
  1159                           ;main.c: 128:                         TRISCbits.TRISC7 = 1;
  1160  000A74  8E94               	bsf	148,7,c	;volatile
  1161  000A76                     
  1162                           ;main.c: 129:                         TRISCbits.TRISC6 = 0;
  1163  000A76  9C94               	bcf	148,6,c	;volatile
  1164  000A78                     
  1165                           ;main.c: 130:                         if(((tecla) & (1<<(7)))){
  1166  000A78  AE4C               	btfss	main@tecla^0,7,c
  1167  000A7A  EF41  F005         	goto	u1621
  1168  000A7E  EF43  F005         	goto	u1620
  1169  000A82                     u1621:
  1170  000A82  EF07  F006         	goto	l77
  1171  000A86                     u1620:
  1172  000A86  EF83  F005         	goto	l2389
  1173  000A8A                     l2369:
  1174                           
  1175                           ;main.c: 132:                                 for(i=0;i<14;i++){
  1176  000A8A  0E00               	movlw	0
  1177  000A8C  6E4E               	movwf	main@i^0,c
  1178  000A8E                     l83:
  1179                           
  1180                           ;main.c: 133:                                     if(((PIR1) & (1<<(5)))){
  1181  000A8E  AA9E               	btfss	158,5,c	;volatile
  1182  000A90  EF4C  F005         	goto	u1631
  1183  000A94  EF4E  F005         	goto	u1630
  1184  000A98                     u1631:
  1185  000A98  EF79  F005         	goto	l2385
  1186  000A9C                     u1630:
  1187  000A9C                     
  1188                           ;main.c: 134:                                         tmp[i] = serialRead();
  1189  000A9C  0E3C               	movlw	low main@tmp
  1190  000A9E  244E               	addwf	main@i^0,w,c
  1191  000AA0  6ED9               	movwf	fsr2l,c
  1192  000AA2  6ADA               	clrf	fsr2h,c
  1193  000AA4  0E00               	movlw	high main@tmp
  1194  000AA6  22DA               	addwfc	fsr2h,f,c
  1195  000AA8  ECFC  F008         	call	_serialRead	;wreg free
  1196  000AAC  6EDF               	movwf	indf2,c
  1197  000AAE                     
  1198                           ;main.c: 135:                                         if(i==13){
  1199  000AAE  0E0D               	movlw	13
  1200  000AB0  184E               	xorwf	main@i^0,w,c
  1201  000AB2  A4D8               	btfss	status,2,c
  1202  000AB4  EF5E  F005         	goto	u1641
  1203  000AB8  EF60  F005         	goto	u1640
  1204  000ABC                     u1641:
  1205  000ABC  EF64  F005         	goto	l2381
  1206  000AC0                     u1640:
  1207  000AC0                     
  1208                           ;main.c: 136:                                           tmp[13]= '*';
  1209  000AC0  0E2A               	movlw	42
  1210  000AC2  6E49               	movwf	(main@tmp+13)^0,c
  1211                           
  1212                           ;main.c: 137:                                         }
  1213  000AC4  EF7A  F005         	goto	l89
  1214  000AC8                     l2381:
  1215  000AC8  0E3C               	movlw	low main@tmp
  1216  000ACA  244E               	addwf	main@i^0,w,c
  1217  000ACC  6ED9               	movwf	fsr2l,c
  1218  000ACE  6ADA               	clrf	fsr2h,c
  1219  000AD0  0E00               	movlw	high main@tmp
  1220  000AD2  22DA               	addwfc	fsr2h,f,c
  1221  000AD4  0E2A               	movlw	42
  1222  000AD6  18DE               	xorwf	postinc2,w,c
  1223  000AD8  A4D8               	btfss	status,2,c
  1224  000ADA  EF71  F005         	goto	u1651
  1225  000ADE  EF73  F005         	goto	u1650
  1226  000AE2                     u1651:
  1227  000AE2  EF7A  F005         	goto	l89
  1228  000AE6                     u1650:
  1229  000AE6                     
  1230                           ;main.c: 139:                                             tmp[13]= '*';
  1231  000AE6  0E2A               	movlw	42
  1232  000AE8  6E49               	movwf	(main@tmp+13)^0,c
  1233                           
  1234                           ;main.c: 140:                                             i=14;
  1235  000AEA  0E0E               	movlw	14
  1236  000AEC  6E4E               	movwf	main@i^0,c
  1237  000AEE  EF7A  F005         	goto	l89
  1238  000AF2                     l2385:
  1239  000AF2  064E               	decf	main@i^0,f,c
  1240  000AF4                     l89:
  1241                           
  1242                           ;main.c: 144:                                 }
  1243  000AF4  2A4E               	incf	main@i^0,f,c
  1244  000AF6  0E0D               	movlw	13
  1245  000AF8  644E               	cpfsgt	main@i^0,c
  1246  000AFA  EF81  F005         	goto	u1661
  1247  000AFE  EF83  F005         	goto	u1660
  1248  000B02                     u1661:
  1249  000B02  EF47  F005         	goto	l83
  1250  000B06                     u1660:
  1251  000B06                     l2389:
  1252                           
  1253                           ;main.c: 131:                             while(tmp[13]!= '*'){
  1254  000B06  0E2A               	movlw	42
  1255  000B08  1849               	xorwf	(main@tmp+13)^0,w,c
  1256  000B0A  A4D8               	btfss	status,2,c
  1257  000B0C  EF8A  F005         	goto	u1671
  1258  000B10  EF8C  F005         	goto	u1670
  1259  000B14                     u1671:
  1260  000B14  EF45  F005         	goto	l2369
  1261  000B18                     u1670:
  1262  000B18                     
  1263                           ;main.c: 146:                             if(cont == 1){
  1264  000B18  044B               	decf	main@cont^0,w,c
  1265  000B1A  A4D8               	btfss	status,2,c
  1266  000B1C  EF92  F005         	goto	u1681
  1267  000B20  EF94  F005         	goto	u1680
  1268  000B24                     u1681:
  1269  000B24  EFB7  F005         	goto	l2407
  1270  000B28                     u1680:
  1271  000B28                     
  1272                           ;main.c: 147:                                     for(i=0;i<14;i++){
  1273  000B28  0E00               	movlw	0
  1274  000B2A  6E4E               	movwf	main@i^0,c
  1275  000B2C                     l2399:
  1276                           
  1277                           ;main.c: 148:                                         atmp[i]= tmp[i];
  1278  000B2C  0E3C               	movlw	low main@tmp
  1279  000B2E  244E               	addwf	main@i^0,w,c
  1280  000B30  6ED9               	movwf	fsr2l,c
  1281  000B32  6ADA               	clrf	fsr2h,c
  1282  000B34  0E00               	movlw	high main@tmp
  1283  000B36  22DA               	addwfc	fsr2h,f,c
  1284  000B38  0E12               	movlw	low main@atmp
  1285  000B3A  244E               	addwf	main@i^0,w,c
  1286  000B3C  6EE1               	movwf	fsr1l,c
  1287  000B3E  6AE2               	clrf	fsr1h,c
  1288  000B40  0E00               	movlw	high main@atmp
  1289  000B42  22E2               	addwfc	fsr1h,f,c
  1290  000B44  CFDF FFE7          	movff	indf2,indf1
  1291  000B48                     
  1292                           ;main.c: 149:                                         tmp[i] = ' ';
  1293  000B48  0E3C               	movlw	low main@tmp
  1294  000B4A  244E               	addwf	main@i^0,w,c
  1295  000B4C  6ED9               	movwf	fsr2l,c
  1296  000B4E  6ADA               	clrf	fsr2h,c
  1297  000B50  0E00               	movlw	high main@tmp
  1298  000B52  22DA               	addwfc	fsr2h,f,c
  1299  000B54  0E20               	movlw	32
  1300  000B56  6EDF               	movwf	indf2,c
  1301  000B58                     
  1302                           ;main.c: 150:                                     }
  1303  000B58  2A4E               	incf	main@i^0,f,c
  1304  000B5A  0E0D               	movlw	13
  1305  000B5C  644E               	cpfsgt	main@i^0,c
  1306  000B5E  EFB3  F005         	goto	u1691
  1307  000B62  EFB5  F005         	goto	u1690
  1308  000B66                     u1691:
  1309  000B66  EF96  F005         	goto	l2399
  1310  000B6A                     u1690:
  1311  000B6A  EF07  F006         	goto	l77
  1312  000B6E                     l2407:
  1313  000B6E  0E02               	movlw	2
  1314  000B70  184B               	xorwf	main@cont^0,w,c
  1315  000B72  A4D8               	btfss	status,2,c
  1316  000B74  EFBE  F005         	goto	u1701
  1317  000B78  EFC0  F005         	goto	u1700
  1318  000B7C                     u1701:
  1319  000B7C  EFE3  F005         	goto	l2423
  1320  000B80                     u1700:
  1321  000B80                     
  1322                           ;main.c: 153:                                 for(i=0;i<14;i++){
  1323  000B80  0E00               	movlw	0
  1324  000B82  6E4E               	movwf	main@i^0,c
  1325  000B84                     l2415:
  1326                           
  1327                           ;main.c: 154:                                     btmp[i]= tmp[i];
  1328  000B84  0E3C               	movlw	low main@tmp
  1329  000B86  244E               	addwf	main@i^0,w,c
  1330  000B88  6ED9               	movwf	fsr2l,c
  1331  000B8A  6ADA               	clrf	fsr2h,c
  1332  000B8C  0E00               	movlw	high main@tmp
  1333  000B8E  22DA               	addwfc	fsr2h,f,c
  1334  000B90  0E20               	movlw	low main@btmp
  1335  000B92  244E               	addwf	main@i^0,w,c
  1336  000B94  6EE1               	movwf	fsr1l,c
  1337  000B96  6AE2               	clrf	fsr1h,c
  1338  000B98  0E00               	movlw	high main@btmp
  1339  000B9A  22E2               	addwfc	fsr1h,f,c
  1340  000B9C  CFDF FFE7          	movff	indf2,indf1
  1341  000BA0                     
  1342                           ;main.c: 155:                                     tmp[i] = ' ';
  1343  000BA0  0E3C               	movlw	low main@tmp
  1344  000BA2  244E               	addwf	main@i^0,w,c
  1345  000BA4  6ED9               	movwf	fsr2l,c
  1346  000BA6  6ADA               	clrf	fsr2h,c
  1347  000BA8  0E00               	movlw	high main@tmp
  1348  000BAA  22DA               	addwfc	fsr2h,f,c
  1349  000BAC  0E20               	movlw	32
  1350  000BAE  6EDF               	movwf	indf2,c
  1351  000BB0                     
  1352                           ;main.c: 156:                                 }
  1353  000BB0  2A4E               	incf	main@i^0,f,c
  1354  000BB2  0E0D               	movlw	13
  1355  000BB4  644E               	cpfsgt	main@i^0,c
  1356  000BB6  EFDF  F005         	goto	u1711
  1357  000BBA  EFE1  F005         	goto	u1710
  1358  000BBE                     u1711:
  1359  000BBE  EFC2  F005         	goto	l2415
  1360  000BC2                     u1710:
  1361  000BC2  EF07  F006         	goto	l77
  1362  000BC6                     l2423:
  1363  000BC6  0E03               	movlw	3
  1364  000BC8  184B               	xorwf	main@cont^0,w,c
  1365  000BCA  A4D8               	btfss	status,2,c
  1366  000BCC  EFEA  F005         	goto	u1721
  1367  000BD0  EFEC  F005         	goto	u1720
  1368  000BD4                     u1721:
  1369  000BD4  EF07  F006         	goto	l80
  1370  000BD8                     u1720:
  1371  000BD8                     
  1372                           ;main.c: 159:                                 for(i=0;i<14;i++){
  1373  000BD8  0E00               	movlw	0
  1374  000BDA  6E4E               	movwf	main@i^0,c
  1375  000BDC                     l2431:
  1376                           
  1377                           ;main.c: 160:                                     ctmp[i]= tmp[i];
  1378  000BDC  0E3C               	movlw	low main@tmp
  1379  000BDE  244E               	addwf	main@i^0,w,c
  1380  000BE0  6ED9               	movwf	fsr2l,c
  1381  000BE2  6ADA               	clrf	fsr2h,c
  1382  000BE4  0E00               	movlw	high main@tmp
  1383  000BE6  22DA               	addwfc	fsr2h,f,c
  1384  000BE8  0E2E               	movlw	low main@ctmp
  1385  000BEA  244E               	addwf	main@i^0,w,c
  1386  000BEC  6EE1               	movwf	fsr1l,c
  1387  000BEE  6AE2               	clrf	fsr1h,c
  1388  000BF0  0E00               	movlw	high main@ctmp
  1389  000BF2  22E2               	addwfc	fsr1h,f,c
  1390  000BF4  CFDF FFE7          	movff	indf2,indf1
  1391  000BF8                     
  1392                           ;main.c: 161:                                 }
  1393  000BF8  2A4E               	incf	main@i^0,f,c
  1394  000BFA  0E0D               	movlw	13
  1395  000BFC  644E               	cpfsgt	main@i^0,c
  1396  000BFE  EF03  F006         	goto	u1731
  1397  000C02  EF05  F006         	goto	u1730
  1398  000C06                     u1731:
  1399  000C06  EFEE  F005         	goto	l2431
  1400  000C0A                     u1730:
  1401  000C0A  EF07  F006         	goto	l77
  1402  000C0E                     l80:
  1403  000C0E                     l77:
  1404                           
  1405                           ;main.c: 114:                 while(!((tecla) & (1<<(0)))){
  1406  000C0E  A04C               	btfss	main@tecla^0,0,c
  1407  000C10  EF0C  F006         	goto	u1741
  1408  000C14  EF0E  F006         	goto	u1740
  1409  000C18                     u1741:
  1410  000C18  EFFD  F004         	goto	l2337
  1411  000C1C                     u1740:
  1412  000C1C  EFAE  F003         	goto	l2211
  1413  000C20  EF00  F000         	goto	start
  1414  000C24                     __end_of_main:
  1415                           	callstack 0
  1416                           
  1417 ;; *************** function _serialRead *****************
  1418 ;; Defined at:
  1419 ;;		line 30 in file "serial.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;		None
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  resp            1    0[COMRAM] unsigned char 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      unsigned char 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2, status,0
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1433 ;;      Params:         0       0       0       0       0       0       0
  1434 ;;      Locals:         1       0       0       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0
  1436 ;;      Totals:         1       0       0       0       0       0       0
  1437 ;;Total ram usage:        1 bytes
  1438 ;; Hardware stack levels used: 1
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text1
  1447  0011F8                     __ptext1:
  1448                           	callstack 0
  1449  0011F8                     _serialRead:
  1450                           	callstack 30
  1451  0011F8                     
  1452                           ;serial.c: 31:     char resp = 0;
  1453  0011F8  0E00               	movlw	0
  1454  0011FA  6E01               	movwf	serialRead@resp^0,c
  1455  0011FC                     
  1456                           ;serial.c: 33:     if (((RCSTA) & (1<<(1))))
  1457  0011FC  A2AB               	btfss	171,1,c	;volatile
  1458  0011FE  EF03  F009         	goto	u1451
  1459  001202  EF05  F009         	goto	u1450
  1460  001206                     u1451:
  1461  001206  EF07  F009         	goto	l2155
  1462  00120A                     u1450:
  1463  00120A                     
  1464                           ;serial.c: 34:     {;serial.c: 35:         ((RCSTA) &= ~(1<<(4)));
  1465  00120A  98AB               	bcf	171,4,c	;volatile
  1466                           
  1467                           ;serial.c: 36:         ((RCSTA) |= (1<<(4)));
  1468  00120C  88AB               	bsf	171,4,c	;volatile
  1469  00120E                     l2155:
  1470                           
  1471                           ;serial.c: 39:     if (((PIR1) & (1<<(5))))
  1472  00120E  AA9E               	btfss	158,5,c	;volatile
  1473  001210  EF0C  F009         	goto	u1461
  1474  001214  EF0E  F009         	goto	u1460
  1475  001218                     u1461:
  1476  001218  EF10  F009         	goto	l2159
  1477  00121C                     u1460:
  1478  00121C                     
  1479                           ;serial.c: 40:     {;serial.c: 41:         resp = RCREG;
  1480  00121C  CFAE F001          	movff	4014,serialRead@resp	;volatile
  1481  001220                     l2159:
  1482                           
  1483                           ;serial.c: 43:     return resp;
  1484  001220  5001               	movf	serialRead@resp^0,w,c
  1485  001222  0012               	return		;funcret
  1486  001224                     __end_of_serialRead:
  1487                           	callstack 0
  1488                           
  1489 ;; *************** function _serialInit *****************
  1490 ;; Defined at:
  1491 ;;		line 48 in file "serial.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;		None
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;		None
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      void 
  1498 ;; Registers used:
  1499 ;;		wreg, status,2, status,0
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1505 ;;      Params:         0       0       0       0       0       0       0
  1506 ;;      Locals:         0       0       0       0       0       0       0
  1507 ;;      Temps:          0       0       0       0       0       0       0
  1508 ;;      Totals:         0       0       0       0       0       0       0
  1509 ;;Total ram usage:        0 bytes
  1510 ;; Hardware stack levels used: 1
  1511 ;; This function calls:
  1512 ;;		Nothing
  1513 ;; This function is called by:
  1514 ;;		_main
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           	psect	text2
  1519  00129E                     __ptext2:
  1520                           	callstack 0
  1521  00129E                     _serialInit:
  1522                           	callstack 30
  1523  00129E                     
  1524                           ;serial.c: 49:     TXSTA = 0b00101100;
  1525  00129E  0E2C               	movlw	44
  1526  0012A0  6EAC               	movwf	172,c	;volatile
  1527                           
  1528                           ;serial.c: 50:     RCSTA = 0b10010000;
  1529  0012A2  0E90               	movlw	144
  1530  0012A4  6EAB               	movwf	171,c	;volatile
  1531                           
  1532                           ;serial.c: 51:     BAUDCON = 0b00001000;
  1533  0012A6  0E08               	movlw	8
  1534  0012A8  6EB8               	movwf	184,c	;volatile
  1535                           
  1536                           ;serial.c: 52:     SPBRGH = 0;
  1537  0012AA  0E00               	movlw	0
  1538  0012AC  6EB0               	movwf	176,c	;volatile
  1539                           
  1540                           ;serial.c: 53:     SPBRG = 34;
  1541  0012AE  0E22               	movlw	34
  1542  0012B0  6EAF               	movwf	175,c	;volatile
  1543  0012B2                     
  1544                           ;serial.c: 54:     ((TRISC) |= (1<<(6)));
  1545  0012B2  8C94               	bsf	148,6,c	;volatile
  1546  0012B4                     
  1547                           ;serial.c: 55:     ((TRISC) |= (1<<(7)));
  1548  0012B4  8E94               	bsf	148,7,c	;volatile
  1549  0012B6  0012               	return		;funcret
  1550  0012B8                     __end_of_serialInit:
  1551                           	callstack 0
  1552                           
  1553 ;; *************** function _rtc_r *****************
  1554 ;; Defined at:
  1555 ;;		line 44 in file "rtc_r.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;		None
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  tmp             1    9[COMRAM] unsigned char 
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  1    wreg      void 
  1562 ;; Registers used:
  1563 ;;		wreg, status,2, status,0, cstack
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1569 ;;      Params:         0       0       0       0       0       0       0
  1570 ;;      Locals:         1       0       0       0       0       0       0
  1571 ;;      Temps:          0       0       0       0       0       0       0
  1572 ;;      Totals:         1       0       0       0       0       0       0
  1573 ;;Total ram usage:        1 bytes
  1574 ;; Hardware stack levels used: 1
  1575 ;; Hardware stack levels required when called: 2
  1576 ;; This function calls:
  1577 ;;		_getd
  1578 ;;		_getu
  1579 ;;		_i2c_rb
  1580 ;;		_i2c_start
  1581 ;;		_i2c_stop
  1582 ;;		_i2c_wb
  1583 ;; This function is called by:
  1584 ;;		_main
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text3
  1589  000EAA                     __ptext3:
  1590                           	callstack 0
  1591  000EAA                     _rtc_r:
  1592                           	callstack 28
  1593  000EAA                     
  1594                           ;rtc_r.c: 46:   unsigned char tmp;;rtc_r.c: 48:   i2c_start();
  1595  000EAA  EC7C  F009         	call	_i2c_start	;wreg free
  1596                           
  1597                           ;rtc_r.c: 49:   i2c_wb(0xD0);
  1598  000EAE  0ED0               	movlw	208
  1599  000EB0  ECA0  F008         	call	_i2c_wb
  1600                           
  1601                           ;rtc_r.c: 50:   i2c_wb(0);
  1602  000EB4  0E00               	movlw	0
  1603  000EB6  ECA0  F008         	call	_i2c_wb
  1604                           
  1605                           ;rtc_r.c: 52:   i2c_start();
  1606  000EBA  EC7C  F009         	call	_i2c_start	;wreg free
  1607                           
  1608                           ;rtc_r.c: 53:   i2c_wb(0xD1);
  1609  000EBE  0ED1               	movlw	209
  1610  000EC0  ECA0  F008         	call	_i2c_wb
  1611                           
  1612                           ;rtc_r.c: 54:   tmp= 0x7F & i2c_rb(1);
  1613  000EC4  0E01               	movlw	1
  1614  000EC6  ECC1  F007         	call	_i2c_rb
  1615  000ECA  0B7F               	andlw	127
  1616  000ECC  6E0A               	movwf	rtc_r@tmp^0,c
  1617  000ECE                     
  1618                           ;rtc_r.c: 55:   time[5]=':';
  1619  000ECE  0E3A               	movlw	58
  1620  000ED0  6E54               	movwf	(_time+5)^0,c	;volatile
  1621  000ED2                     
  1622                           ;rtc_r.c: 56:   time[6]=getd(tmp);
  1623  000ED2  500A               	movf	rtc_r@tmp^0,w,c
  1624  000ED4  EC84  F009         	call	_getd
  1625  000ED8  6E55               	movwf	(_time+6)^0,c	;volatile
  1626  000EDA                     
  1627                           ;rtc_r.c: 57:   time[7]=getu(tmp);
  1628  000EDA  500A               	movf	rtc_r@tmp^0,w,c
  1629  000EDC  EC8A  F009         	call	_getu
  1630  000EE0  6E56               	movwf	(_time+7)^0,c	;volatile
  1631  000EE2                     
  1632                           ;rtc_r.c: 58:   time[8]=0;
  1633  000EE2  0E00               	movlw	0
  1634  000EE4  6E57               	movwf	(_time+8)^0,c	;volatile
  1635                           
  1636                           ;rtc_r.c: 60:   tmp= 0x7F & i2c_rb(1);
  1637  000EE6  0E01               	movlw	1
  1638  000EE8  ECC1  F007         	call	_i2c_rb
  1639  000EEC  0B7F               	andlw	127
  1640  000EEE  6E0A               	movwf	rtc_r@tmp^0,c
  1641  000EF0                     
  1642                           ;rtc_r.c: 61:   time[2]=':';
  1643  000EF0  0E3A               	movlw	58
  1644  000EF2  6E51               	movwf	(_time+2)^0,c	;volatile
  1645  000EF4                     
  1646                           ;rtc_r.c: 62:   time[3]=getd(tmp);
  1647  000EF4  500A               	movf	rtc_r@tmp^0,w,c
  1648  000EF6  EC84  F009         	call	_getd
  1649  000EFA  6E52               	movwf	(_time+3)^0,c	;volatile
  1650  000EFC                     
  1651                           ;rtc_r.c: 63:   time[4]=getu(tmp);
  1652  000EFC  500A               	movf	rtc_r@tmp^0,w,c
  1653  000EFE  EC8A  F009         	call	_getu
  1654  000F02  6E53               	movwf	(_time+4)^0,c	;volatile
  1655  000F04                     
  1656                           ;rtc_r.c: 65:   tmp= 0x3F & i2c_rb(1);
  1657  000F04  0E01               	movlw	1
  1658  000F06  ECC1  F007         	call	_i2c_rb
  1659  000F0A  0B3F               	andlw	63
  1660  000F0C  6E0A               	movwf	rtc_r@tmp^0,c
  1661  000F0E                     
  1662                           ;rtc_r.c: 66:   time[0]=getd(tmp);
  1663  000F0E  500A               	movf	rtc_r@tmp^0,w,c
  1664  000F10  EC84  F009         	call	_getd
  1665  000F14  6E4F               	movwf	_time^0,c	;volatile
  1666  000F16                     
  1667                           ;rtc_r.c: 67:   time[1]=getu(tmp);
  1668  000F16  500A               	movf	rtc_r@tmp^0,w,c
  1669  000F18  EC8A  F009         	call	_getu
  1670  000F1C  6E50               	movwf	(_time+1)^0,c	;volatile
  1671  000F1E                     
  1672                           ;rtc_r.c: 69:   i2c_rb(1);
  1673  000F1E  0E01               	movlw	1
  1674  000F20  ECC1  F007         	call	_i2c_rb
  1675  000F24                     
  1676                           ;rtc_r.c: 71:   tmp= 0x3F & i2c_rb(1);
  1677  000F24  0E01               	movlw	1
  1678  000F26  ECC1  F007         	call	_i2c_rb
  1679  000F2A  0B3F               	andlw	63
  1680  000F2C  6E0A               	movwf	rtc_r@tmp^0,c
  1681  000F2E                     
  1682                           ;rtc_r.c: 72:   date[0]=getd(tmp);
  1683  000F2E  500A               	movf	rtc_r@tmp^0,w,c
  1684  000F30  EC84  F009         	call	_getd
  1685  000F34  6E60               	movwf	_date^0,c	;volatile
  1686  000F36                     
  1687                           ;rtc_r.c: 73:   date[1]=getu(tmp);
  1688  000F36  500A               	movf	rtc_r@tmp^0,w,c
  1689  000F38  EC8A  F009         	call	_getu
  1690  000F3C  6E61               	movwf	(_date+1)^0,c	;volatile
  1691  000F3E                     
  1692                           ;rtc_r.c: 76:   tmp= 0x1F & i2c_rb(1);
  1693  000F3E  0E01               	movlw	1
  1694  000F40  ECC1  F007         	call	_i2c_rb
  1695  000F44  0B1F               	andlw	31
  1696  000F46  6E0A               	movwf	rtc_r@tmp^0,c
  1697  000F48                     
  1698                           ;rtc_r.c: 77:   date[2]='/';
  1699  000F48  0E2F               	movlw	47
  1700  000F4A  6E62               	movwf	(_date+2)^0,c	;volatile
  1701                           
  1702                           ;rtc_r.c: 78:   date[3]=getd(tmp);
  1703  000F4C  500A               	movf	rtc_r@tmp^0,w,c
  1704  000F4E  EC84  F009         	call	_getd
  1705  000F52  6E63               	movwf	(_date+3)^0,c	;volatile
  1706                           
  1707                           ;rtc_r.c: 79:   date[4]=getu(tmp);
  1708  000F54  500A               	movf	rtc_r@tmp^0,w,c
  1709  000F56  EC8A  F009         	call	_getu
  1710  000F5A  6E64               	movwf	(_date+4)^0,c	;volatile
  1711                           
  1712                           ;rtc_r.c: 81:   tmp= i2c_rb(0);
  1713  000F5C  0E00               	movlw	0
  1714  000F5E  ECC1  F007         	call	_i2c_rb
  1715  000F62  6E0A               	movwf	rtc_r@tmp^0,c
  1716  000F64                     
  1717                           ;rtc_r.c: 82:   date[5]='/';
  1718  000F64  0E2F               	movlw	47
  1719  000F66  6E65               	movwf	(_date+5)^0,c	;volatile
  1720  000F68                     
  1721                           ;rtc_r.c: 83:   date[6]=getd(tmp);
  1722  000F68  500A               	movf	rtc_r@tmp^0,w,c
  1723  000F6A  EC84  F009         	call	_getd
  1724  000F6E  6E66               	movwf	(_date+6)^0,c	;volatile
  1725  000F70                     
  1726                           ;rtc_r.c: 84:   date[7]=getu(tmp);
  1727  000F70  500A               	movf	rtc_r@tmp^0,w,c
  1728  000F72  EC8A  F009         	call	_getu
  1729  000F76  6E67               	movwf	(_date+7)^0,c	;volatile
  1730  000F78                     
  1731                           ;rtc_r.c: 85:   date[8]=0;
  1732  000F78  0E00               	movlw	0
  1733  000F7A  6E68               	movwf	(_date+8)^0,c	;volatile
  1734                           
  1735                           ;rtc_r.c: 87:   i2c_stop();
  1736  000F7C  EC74  F009         	call	_i2c_stop	;wreg free
  1737  000F80  0012               	return		;funcret
  1738  000F82                     __end_of_rtc_r:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _i2c_wb *****************
  1742 ;; Defined at:
  1743 ;;		line 62 in file "i2c.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  val             1    wreg     unsigned char 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  val             1    6[COMRAM] unsigned char 
  1748 ;;  i               1    7[COMRAM] unsigned char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, status,2, status,0, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1758 ;;      Params:         0       0       0       0       0       0       0
  1759 ;;      Locals:         2       0       0       0       0       0       0
  1760 ;;      Temps:          2       0       0       0       0       0       0
  1761 ;;      Totals:         4       0       0       0       0       0       0
  1762 ;;Total ram usage:        4 bytes
  1763 ;; Hardware stack levels used: 1
  1764 ;; Hardware stack levels required when called: 1
  1765 ;; This function calls:
  1766 ;;		_delay
  1767 ;; This function is called by:
  1768 ;;		_rtc_r
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	text4
  1773  001140                     __ptext4:
  1774                           	callstack 0
  1775  001140                     _i2c_wb:
  1776                           	callstack 28
  1777                           
  1778                           ;incstack = 0
  1779                           ;i2c_wb@val stored from wreg
  1780  001140  6E07               	movwf	i2c_wb@val^0,c
  1781  001142                     
  1782                           ;i2c.c: 63:     unsigned char i;;i2c.c: 64:     PORTCbits.RC3 = 0;
  1783  001142  9682               	bcf	130,3,c	;volatile
  1784  001144                     
  1785                           ;i2c.c: 65:     for (i = 0; i < 8; i++) {
  1786  001144  0E00               	movlw	0
  1787  001146  6E08               	movwf	i2c_wb@i^0,c
  1788  001148                     l1957:
  1789                           
  1790                           ;i2c.c: 66:         PORTCbits.RC4 = ((val >> (7 - i))& 0x01);
  1791  001148  5008               	movf	i2c_wb@i^0,w,c
  1792  00114A  0807               	sublw	7
  1793  00114C  6E05               	movwf	??_i2c_wb^0,c
  1794  00114E  C007  F006         	movff	i2c_wb@val,??_i2c_wb+1
  1795  001152  2A05               	incf	??_i2c_wb^0,f,c
  1796  001154  EFAE  F008         	goto	u1254
  1797  001158                     u1255:
  1798  001158  90D8               	bcf	status,0,c
  1799  00115A  3206               	rrcf	(??_i2c_wb+1)^0,f,c
  1800  00115C                     u1254:
  1801  00115C  2E05               	decfsz	??_i2c_wb^0,f,c
  1802  00115E  EFAC  F008         	goto	u1255
  1803  001162  0E01               	movlw	1
  1804  001164  1606               	andwf	(??_i2c_wb+1)^0,f,c
  1805  001166  3A06               	swapf	(??_i2c_wb+1)^0,f,c
  1806  001168  5082               	movf	130,w,c	;volatile
  1807  00116A  1806               	xorwf	(??_i2c_wb+1)^0,w,c
  1808  00116C  0BEF               	andlw	-17
  1809  00116E  1806               	xorwf	(??_i2c_wb+1)^0,w,c
  1810  001170  6E82               	movwf	130,c	;volatile
  1811  001172                     
  1812                           ;i2c.c: 67:         PORTCbits.RC3 = 1;
  1813  001172  8682               	bsf	130,3,c	;volatile
  1814  001174                     
  1815                           ;i2c.c: 68:         delay();
  1816  001174  EC70  F008         	call	_delay	;wreg free
  1817  001178                     
  1818                           ;i2c.c: 69:         PORTCbits.RC3 = 0;
  1819  001178  9682               	bcf	130,3,c	;volatile
  1820  00117A                     
  1821                           ;i2c.c: 70:     }
  1822  00117A  2A08               	incf	i2c_wb@i^0,f,c
  1823  00117C  0E07               	movlw	7
  1824  00117E  6408               	cpfsgt	i2c_wb@i^0,c
  1825  001180  EFC4  F008         	goto	u1261
  1826  001184  EFC6  F008         	goto	u1260
  1827  001188                     u1261:
  1828  001188  EFA4  F008         	goto	l1957
  1829  00118C                     u1260:
  1830  00118C                     
  1831                           ;i2c.c: 71:     PORTCbits.RC4 = 1;
  1832  00118C  8882               	bsf	130,4,c	;volatile
  1833  00118E                     
  1834                           ;i2c.c: 72:     delay();
  1835  00118E  EC70  F008         	call	_delay	;wreg free
  1836  001192                     
  1837                           ;i2c.c: 73:     PORTCbits.RC3 = 1;
  1838  001192  8682               	bsf	130,3,c	;volatile
  1839                           
  1840                           ;i2c.c: 74:     delay();
  1841  001194  EC70  F008         	call	_delay	;wreg free
  1842  001198                     
  1843                           ;i2c.c: 75:     PORTCbits.RC3 = 0;
  1844  001198  9682               	bcf	130,3,c	;volatile
  1845  00119A  0012               	return		;funcret
  1846  00119C                     __end_of_i2c_wb:
  1847                           	callstack 0
  1848                           
  1849 ;; *************** function _i2c_stop *****************
  1850 ;; Defined at:
  1851 ;;		line 54 in file "i2c.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;		None
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;		None
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  1    wreg      void 
  1858 ;; Registers used:
  1859 ;;		wreg, status,2, status,0, cstack
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1865 ;;      Params:         0       0       0       0       0       0       0
  1866 ;;      Locals:         0       0       0       0       0       0       0
  1867 ;;      Temps:          0       0       0       0       0       0       0
  1868 ;;      Totals:         0       0       0       0       0       0       0
  1869 ;;Total ram usage:        0 bytes
  1870 ;; Hardware stack levels used: 1
  1871 ;; Hardware stack levels required when called: 1
  1872 ;; This function calls:
  1873 ;;		_delay
  1874 ;; This function is called by:
  1875 ;;		_rtc_r
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           	psect	text5
  1880  0012E8                     __ptext5:
  1881                           	callstack 0
  1882  0012E8                     _i2c_stop:
  1883                           	callstack 28
  1884  0012E8                     
  1885                           ;i2c.c: 55:     PORTCbits.RC3 = 1;
  1886  0012E8  8682               	bsf	130,3,c	;volatile
  1887                           
  1888                           ;i2c.c: 56:     PORTCbits.RC4 = 0;
  1889  0012EA  9882               	bcf	130,4,c	;volatile
  1890  0012EC                     
  1891                           ;i2c.c: 57:     delay();
  1892  0012EC  EC70  F008         	call	_delay	;wreg free
  1893  0012F0                     
  1894                           ;i2c.c: 58:     PORTCbits.RC4 = 1;
  1895  0012F0  8882               	bsf	130,4,c	;volatile
  1896                           
  1897                           ;i2c.c: 59:     delay();
  1898  0012F2  EC70  F008         	call	_delay	;wreg free
  1899  0012F6  0012               	return		;funcret
  1900  0012F8                     __end_of_i2c_stop:
  1901                           	callstack 0
  1902                           
  1903 ;; *************** function _i2c_start *****************
  1904 ;; Defined at:
  1905 ;;		line 46 in file "i2c.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;		None
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, status,2, status,0, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1919 ;;      Params:         0       0       0       0       0       0       0
  1920 ;;      Locals:         0       0       0       0       0       0       0
  1921 ;;      Temps:          0       0       0       0       0       0       0
  1922 ;;      Totals:         0       0       0       0       0       0       0
  1923 ;;Total ram usage:        0 bytes
  1924 ;; Hardware stack levels used: 1
  1925 ;; Hardware stack levels required when called: 1
  1926 ;; This function calls:
  1927 ;;		_delay
  1928 ;; This function is called by:
  1929 ;;		_rtc_r
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text6
  1934  0012F8                     __ptext6:
  1935                           	callstack 0
  1936  0012F8                     _i2c_start:
  1937                           	callstack 28
  1938  0012F8                     
  1939                           ;i2c.c: 47:     PORTCbits.RC3 = 1;
  1940  0012F8  8682               	bsf	130,3,c	;volatile
  1941                           
  1942                           ;i2c.c: 48:     PORTCbits.RC4 = 1;
  1943  0012FA  8882               	bsf	130,4,c	;volatile
  1944  0012FC                     
  1945                           ;i2c.c: 49:     delay();
  1946  0012FC  EC70  F008         	call	_delay	;wreg free
  1947  001300                     
  1948                           ;i2c.c: 50:     PORTCbits.RC4 = 0;
  1949  001300  9882               	bcf	130,4,c	;volatile
  1950                           
  1951                           ;i2c.c: 51:     delay();
  1952  001302  EC70  F008         	call	_delay	;wreg free
  1953  001306  0012               	return		;funcret
  1954  001308                     __end_of_i2c_start:
  1955                           	callstack 0
  1956                           
  1957 ;; *************** function _i2c_rb *****************
  1958 ;; Defined at:
  1959 ;;		line 78 in file "i2c.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  ack             1    wreg     unsigned char 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  ack             1    6[COMRAM] unsigned char 
  1964 ;;  i               1    8[COMRAM] unsigned char 
  1965 ;;  ret             1    7[COMRAM] unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      unsigned char 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1975 ;;      Params:         0       0       0       0       0       0       0
  1976 ;;      Locals:         3       0       0       0       0       0       0
  1977 ;;      Temps:          2       0       0       0       0       0       0
  1978 ;;      Totals:         5       0       0       0       0       0       0
  1979 ;;Total ram usage:        5 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 1
  1982 ;; This function calls:
  1983 ;;		_delay
  1984 ;; This function is called by:
  1985 ;;		_rtc_r
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text7
  1990  000F82                     __ptext7:
  1991                           	callstack 0
  1992  000F82                     _i2c_rb:
  1993                           	callstack 28
  1994                           
  1995                           ;incstack = 0
  1996                           ;i2c_rb@ack stored from wreg
  1997  000F82  6E07               	movwf	i2c_rb@ack^0,c
  1998  000F84                     
  1999                           ;i2c.c: 79:     char i;;i2c.c: 80:     unsigned char ret = 0;
  2000  000F84  0E00               	movlw	0
  2001  000F86  6E08               	movwf	i2c_rb@ret^0,c
  2002  000F88                     
  2003                           ;i2c.c: 82:     PORTCbits.RC3 = 0;
  2004  000F88  9682               	bcf	130,3,c	;volatile
  2005  000F8A                     
  2006                           ;i2c.c: 83:     TRISCbits.TRISC4 = 1;
  2007  000F8A  8894               	bsf	148,4,c	;volatile
  2008  000F8C                     
  2009                           ;i2c.c: 84:     PORTCbits.RC4 = 1;
  2010  000F8C  8882               	bsf	130,4,c	;volatile
  2011                           
  2012                           ;i2c.c: 85:     for (i = 0; i < 8; i++) {
  2013  000F8E  0E00               	movlw	0
  2014  000F90  6E09               	movwf	i2c_rb@i^0,c
  2015  000F92                     l332:
  2016                           
  2017                           ;i2c.c: 86:         PORTCbits.RC3 = 1;
  2018  000F92  8682               	bsf	130,3,c	;volatile
  2019  000F94                     
  2020                           ;i2c.c: 87:         delay();
  2021  000F94  EC70  F008         	call	_delay	;wreg free
  2022  000F98                     
  2023                           ;i2c.c: 88:         ret |= (PORTCbits.RC4 << (7 - i));
  2024  000F98  5009               	movf	i2c_rb@i^0,w,c
  2025  000F9A  0807               	sublw	7
  2026  000F9C  6E05               	movwf	??_i2c_rb^0,c
  2027  000F9E  B882               	btfsc	130,4,c	;volatile
  2028  000FA0  EFD4  F007         	goto	u1271
  2029  000FA4  EFD8  F007         	goto	u1270
  2030  000FA8                     u1271:
  2031  000FA8  6A06               	clrf	(??_i2c_rb+1)^0,c
  2032  000FAA  2A06               	incf	(??_i2c_rb+1)^0,f,c
  2033  000FAC  EFD9  F007         	goto	u1278
  2034  000FB0                     u1270:
  2035  000FB0  6A06               	clrf	(??_i2c_rb+1)^0,c
  2036  000FB2                     u1278:
  2037  000FB2  2A05               	incf	??_i2c_rb^0,f,c
  2038  000FB4  EFDE  F007         	goto	u1284
  2039  000FB8                     u1285:
  2040  000FB8  90D8               	bcf	status,0,c
  2041  000FBA  3606               	rlcf	(??_i2c_rb+1)^0,f,c
  2042  000FBC                     u1284:
  2043  000FBC  2E05               	decfsz	??_i2c_rb^0,f,c
  2044  000FBE  EFDC  F007         	goto	u1285
  2045  000FC2  5006               	movf	(??_i2c_rb+1)^0,w,c
  2046  000FC4  1208               	iorwf	i2c_rb@ret^0,f,c
  2047  000FC6                     
  2048                           ;i2c.c: 89:         PORTCbits.RC3 = 0;
  2049  000FC6  9682               	bcf	130,3,c	;volatile
  2050  000FC8                     
  2051                           ;i2c.c: 90:     }
  2052  000FC8  2A09               	incf	i2c_rb@i^0,f,c
  2053  000FCA  0E07               	movlw	7
  2054  000FCC  6409               	cpfsgt	i2c_rb@i^0,c
  2055  000FCE  EFEB  F007         	goto	u1291
  2056  000FD2  EFED  F007         	goto	u1290
  2057  000FD6                     u1291:
  2058  000FD6  EFC9  F007         	goto	l332
  2059  000FDA                     u1290:
  2060  000FDA                     
  2061                           ;i2c.c: 91:     TRISCbits.TRISC4 = 0;
  2062  000FDA  9894               	bcf	148,4,c	;volatile
  2063  000FDC                     
  2064                           ;i2c.c: 92:     if (ack)
  2065  000FDC  5007               	movf	i2c_rb@ack^0,w,c
  2066  000FDE  B4D8               	btfsc	status,2,c
  2067  000FE0  EFF4  F007         	goto	u1301
  2068  000FE4  EFF6  F007         	goto	u1300
  2069  000FE8                     u1301:
  2070  000FE8  EFF9  F007         	goto	l334
  2071  000FEC                     u1300:
  2072  000FEC                     
  2073                           ;i2c.c: 93:         PORTCbits.RC4 = 0;
  2074  000FEC  9882               	bcf	130,4,c	;volatile
  2075  000FEE  EFFA  F007         	goto	l2001
  2076  000FF2                     l334:
  2077                           
  2078                           ;i2c.c: 95:         PORTCbits.RC4 = 1;
  2079  000FF2  8882               	bsf	130,4,c	;volatile
  2080  000FF4                     l2001:
  2081                           
  2082                           ;i2c.c: 96:     delay();
  2083  000FF4  EC70  F008         	call	_delay	;wreg free
  2084  000FF8                     
  2085                           ;i2c.c: 97:     PORTCbits.RC3 = 1;
  2086  000FF8  8682               	bsf	130,3,c	;volatile
  2087                           
  2088                           ;i2c.c: 98:     delay();
  2089  000FFA  EC70  F008         	call	_delay	;wreg free
  2090  000FFE                     
  2091                           ;i2c.c: 99:     PORTCbits.RC3 = 0;
  2092  000FFE  9682               	bcf	130,3,c	;volatile
  2093  001000                     
  2094                           ;i2c.c: 101:     return ret;
  2095  001000  5008               	movf	i2c_rb@ret^0,w,c
  2096  001002  0012               	return		;funcret
  2097  001004                     __end_of_i2c_rb:
  2098                           	callstack 0
  2099                           
  2100 ;; *************** function _delay *****************
  2101 ;; Defined at:
  2102 ;;		line 29 in file "i2c.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;		None
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  i               2    0[COMRAM] unsigned int 
  2107 ;;  k               1    3[COMRAM] volatile unsigned char 
  2108 ;;  j               1    2[COMRAM] volatile unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2118 ;;      Params:         0       0       0       0       0       0       0
  2119 ;;      Locals:         4       0       0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0
  2121 ;;      Totals:         4       0       0       0       0       0       0
  2122 ;;Total ram usage:        4 bytes
  2123 ;; Hardware stack levels used: 1
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_i2c_start
  2128 ;;		_i2c_stop
  2129 ;;		_i2c_wb
  2130 ;;		_i2c_rb
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text8
  2135  0010E0                     __ptext8:
  2136                           	callstack 0
  2137  0010E0                     _delay:
  2138                           	callstack 28
  2139  0010E0                     
  2140                           ;i2c.c: 30:     unsigned int i;;i2c.c: 31:     volatile unsigned char j, k;;i2c.c: 33:  
      +                             for (i = 0; i < 5; i++) {
  2141  0010E0  0E00               	movlw	0
  2142  0010E2  6E02               	movwf	(delay@i+1)^0,c
  2143  0010E4  0E00               	movlw	0
  2144  0010E6  6E01               	movwf	delay@i^0,c
  2145  0010E8                     l1839:
  2146                           
  2147                           ;i2c.c: 34:         for (j = 0; j < 41; j++) {
  2148  0010E8  0E00               	movlw	0
  2149  0010EA  6E03               	movwf	delay@j^0,c	;volatile
  2150  0010EC                     l1841:
  2151  0010EC  0E28               	movlw	40
  2152  0010EE  6403               	cpfsgt	delay@j^0,c	;volatile
  2153  0010F0  EF7C  F008         	goto	u1161
  2154  0010F4  EF7E  F008         	goto	u1160
  2155  0010F8                     u1161:
  2156  0010F8  EF80  F008         	goto	l1845
  2157  0010FC                     u1160:
  2158  0010FC  EF92  F008         	goto	l1859
  2159  001100                     l1845:
  2160                           
  2161                           ;i2c.c: 35:             for (k = 0; k < 3; k++);
  2162  001100  0E00               	movlw	0
  2163  001102  6E04               	movwf	delay@k^0,c	;volatile
  2164  001104                     l1847:
  2165  001104  0E02               	movlw	2
  2166  001106  6404               	cpfsgt	delay@k^0,c	;volatile
  2167  001108  EF88  F008         	goto	u1171
  2168  00110C  EF8A  F008         	goto	u1170
  2169  001110                     u1171:
  2170  001110  EF8C  F008         	goto	l1851
  2171  001114                     u1170:
  2172  001114  EF8F  F008         	goto	l1855
  2173  001118                     l1851:
  2174  001118  2A04               	incf	delay@k^0,f,c	;volatile
  2175  00111A  EF82  F008         	goto	l1847
  2176  00111E                     l1855:
  2177                           
  2178                           ;i2c.c: 36:         }
  2179  00111E  2A03               	incf	delay@j^0,f,c	;volatile
  2180  001120  EF76  F008         	goto	l1841
  2181  001124                     l1859:
  2182                           
  2183                           ;i2c.c: 37:     }
  2184  001124  4A01               	infsnz	delay@i^0,f,c
  2185  001126  2A02               	incf	(delay@i+1)^0,f,c
  2186  001128  5002               	movf	(delay@i+1)^0,w,c
  2187  00112A  E109               	bnz	u1180
  2188  00112C  0E05               	movlw	5
  2189  00112E  5C01               	subwf	delay@i^0,w,c
  2190  001130  A0D8               	btfss	status,0,c
  2191  001132  EF9D  F008         	goto	u1181
  2192  001136  EF9F  F008         	goto	u1180
  2193  00113A                     u1181:
  2194  00113A  EF74  F008         	goto	l1839
  2195  00113E                     u1180:
  2196  00113E  0012               	return		;funcret
  2197  001140                     __end_of_delay:
  2198                           	callstack 0
  2199                           
  2200 ;; *************** function _getu *****************
  2201 ;; Defined at:
  2202 ;;		line 38 in file "rtc_r.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  nn              1    wreg     unsigned char 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  nn              1    0[COMRAM] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      unsigned char 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2216 ;;      Params:         0       0       0       0       0       0       0
  2217 ;;      Locals:         1       0       0       0       0       0       0
  2218 ;;      Temps:          0       0       0       0       0       0       0
  2219 ;;      Totals:         1       0       0       0       0       0       0
  2220 ;;Total ram usage:        1 bytes
  2221 ;; Hardware stack levels used: 1
  2222 ;; This function calls:
  2223 ;;		Nothing
  2224 ;; This function is called by:
  2225 ;;		_rtc_r
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text9
  2230  001314                     __ptext9:
  2231                           	callstack 0
  2232  001314                     _getu:
  2233                           	callstack 29
  2234                           
  2235                           ;incstack = 0
  2236                           ;getu@nn stored from wreg
  2237  001314  6E01               	movwf	getu@nn^0,c
  2238  001316                     
  2239                           ;rtc_r.c: 38: unsigned char getu(unsigned char nn);rtc_r.c: 39: {;rtc_r.c: 40:   return 
      +                          (nn & 0x0F)+0x30;
  2240  001316  5001               	movf	getu@nn^0,w,c
  2241  001318  0B0F               	andlw	15
  2242  00131A  0F30               	addlw	48
  2243  00131C  0012               	return		;funcret
  2244  00131E                     __end_of_getu:
  2245                           	callstack 0
  2246                           
  2247 ;; *************** function _getd *****************
  2248 ;; Defined at:
  2249 ;;		line 33 in file "rtc_r.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  nn              1    wreg     unsigned char 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  nn              1    0[COMRAM] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      unsigned char 
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, status,0
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2263 ;;      Params:         0       0       0       0       0       0       0
  2264 ;;      Locals:         1       0       0       0       0       0       0
  2265 ;;      Temps:          0       0       0       0       0       0       0
  2266 ;;      Totals:         1       0       0       0       0       0       0
  2267 ;;Total ram usage:        1 bytes
  2268 ;; Hardware stack levels used: 1
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_rtc_r
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text10
  2277  001308                     __ptext10:
  2278                           	callstack 0
  2279  001308                     _getd:
  2280                           	callstack 29
  2281                           
  2282                           ;incstack = 0
  2283                           ;getd@nn stored from wreg
  2284  001308  6E01               	movwf	getd@nn^0,c
  2285  00130A                     
  2286                           ;rtc_r.c: 33: unsigned char getd(unsigned char nn);rtc_r.c: 34: {;rtc_r.c: 35:  return (
      +                          (nn & 0xF0)>>4)+0x30;
  2287  00130A  3801               	swapf	getd@nn^0,w,c
  2288  00130C  0B0F               	andlw	15
  2289  00130E  0B0F               	andlw	15
  2290  001310  0F30               	addlw	48
  2291  001312  0012               	return		;funcret
  2292  001314                     __end_of_getd:
  2293                           	callstack 0
  2294                           
  2295 ;; *************** function _pwmInit *****************
  2296 ;; Defined at:
  2297 ;;		line 51 in file "pwm.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg, status,2, status,0, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2311 ;;      Params:         0       0       0       0       0       0       0
  2312 ;;      Locals:         0       0       0       0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0       0       0
  2314 ;;      Totals:         0       0       0       0       0       0       0
  2315 ;;Total ram usage:        0 bytes
  2316 ;; Hardware stack levels used: 1
  2317 ;; Hardware stack levels required when called: 2
  2318 ;; This function calls:
  2319 ;;		_pwmFrequency
  2320 ;; This function is called by:
  2321 ;;		_main
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           	psect	text11
  2326  0012B8                     __ptext11:
  2327                           	callstack 0
  2328  0012B8                     _pwmInit:
  2329                           	callstack 28
  2330  0012B8                     
  2331                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(2)));
  2332  0012B8  9494               	bcf	148,2,c	;volatile
  2333  0012BA                     
  2334                           ;pwm.c: 55:  T2CON |= 0b00000011;
  2335  0012BA  0E03               	movlw	3
  2336  0012BC  12CA               	iorwf	202,f,c	;volatile
  2337  0012BE                     
  2338                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  2339  0012BE  84CA               	bsf	202,2,c	;volatile
  2340  0012C0                     
  2341                           ;pwm.c: 58:  CCP1CON = 0b00001100;
  2342  0012C0  0E0C               	movlw	12
  2343  0012C2  6EBD               	movwf	189,c	;volatile
  2344  0012C4                     
  2345                           ;pwm.c: 60:     pwmFrequency(100);
  2346  0012C4  0E00               	movlw	0
  2347  0012C6  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  2348  0012C8  0E64               	movlw	100
  2349  0012CA  6E0F               	movwf	pwmFrequency@freq^0,c
  2350  0012CC  EC3C  F009         	call	_pwmFrequency	;wreg free
  2351  0012D0  0012               	return		;funcret
  2352  0012D2                     __end_of_pwmInit:
  2353                           	callstack 0
  2354                           
  2355 ;; *************** function _pwmFrequency *****************
  2356 ;; Defined at:
  2357 ;;		line 44 in file "pwm.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  freq            2   14[COMRAM] unsigned int 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2371 ;;      Params:         2       0       0       0       0       0       0
  2372 ;;      Locals:         0       0       0       0       0       0       0
  2373 ;;      Temps:          0       0       0       0       0       0       0
  2374 ;;      Totals:         2       0       0       0       0       0       0
  2375 ;;Total ram usage:        2 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; Hardware stack levels required when called: 1
  2378 ;; This function calls:
  2379 ;;		___aldiv
  2380 ;; This function is called by:
  2381 ;;		_main
  2382 ;;		_pwmInit
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text12
  2387  001278                     __ptext12:
  2388                           	callstack 0
  2389  001278                     _pwmFrequency:
  2390                           	callstack 28
  2391  001278                     
  2392                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  2393  001278  0E48               	movlw	72
  2394  00127A  6E01               	movwf	___aldiv@dividend^0,c
  2395  00127C  0EE8               	movlw	232
  2396  00127E  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2397  001280  0E01               	movlw	1
  2398  001282  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2399  001284  0E00               	movlw	0
  2400  001286  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2401  001288  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  2402  00128C  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  2403  001290  6A07               	clrf	(___aldiv@divisor+2)^0,c
  2404  001292  6A08               	clrf	(___aldiv@divisor+3)^0,c
  2405  001294  ECCF  F006         	call	___aldiv	;wreg free
  2406  001298  0401               	decf	?___aldiv^0,w,c
  2407  00129A  6ECB               	movwf	203,c	;volatile
  2408  00129C  0012               	return		;funcret
  2409  00129E                     __end_of_pwmFrequency:
  2410                           	callstack 0
  2411                           
  2412 ;; *************** function ___aldiv *****************
  2413 ;; Defined at:
  2414 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  dividend        4    0[COMRAM] long 
  2417 ;;  divisor         4    4[COMRAM] long 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  quotient        4   10[COMRAM] long 
  2420 ;;  sign            1    9[COMRAM] unsigned char 
  2421 ;;  counter         1    8[COMRAM] unsigned char 
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  4    0[COMRAM] long 
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, status,0
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2431 ;;      Params:         8       0       0       0       0       0       0
  2432 ;;      Locals:         6       0       0       0       0       0       0
  2433 ;;      Temps:          0       0       0       0       0       0       0
  2434 ;;      Totals:        14       0       0       0       0       0       0
  2435 ;;Total ram usage:       14 bytes
  2436 ;; Hardware stack levels used: 1
  2437 ;; This function calls:
  2438 ;;		Nothing
  2439 ;; This function is called by:
  2440 ;;		_pwmFrequency
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text13
  2445  000D9E                     __ptext13:
  2446                           	callstack 0
  2447  000D9E                     ___aldiv:
  2448                           	callstack 28
  2449  000D9E  0E00               	movlw	0
  2450  000DA0  6E0A               	movwf	___aldiv@sign^0,c
  2451  000DA2  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2452  000DA4  EFD8  F006         	goto	u1190
  2453  000DA8  EFD6  F006         	goto	u1191
  2454  000DAC                     u1191:
  2455  000DAC  EFE2  F006         	goto	l1871
  2456  000DB0                     u1190:
  2457  000DB0  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2458  000DB2  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2459  000DB4  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2460  000DB6  6C05               	negf	___aldiv@divisor^0,c
  2461  000DB8  0E00               	movlw	0
  2462  000DBA  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2463  000DBC  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2464  000DBE  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2465  000DC0  0E01               	movlw	1
  2466  000DC2  6E0A               	movwf	___aldiv@sign^0,c
  2467  000DC4                     l1871:
  2468  000DC4  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2469  000DC6  EFE9  F006         	goto	u1200
  2470  000DCA  EFE7  F006         	goto	u1201
  2471  000DCE                     u1201:
  2472  000DCE  EFF3  F006         	goto	l1877
  2473  000DD2                     u1200:
  2474  000DD2  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2475  000DD4  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2476  000DD6  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2477  000DD8  6C01               	negf	___aldiv@dividend^0,c
  2478  000DDA  0E00               	movlw	0
  2479  000DDC  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2480  000DDE  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2481  000DE0  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2482  000DE2  0E01               	movlw	1
  2483  000DE4  1A0A               	xorwf	___aldiv@sign^0,f,c
  2484  000DE6                     l1877:
  2485  000DE6  0E00               	movlw	0
  2486  000DE8  6E0B               	movwf	___aldiv@quotient^0,c
  2487  000DEA  0E00               	movlw	0
  2488  000DEC  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2489  000DEE  0E00               	movlw	0
  2490  000DF0  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2491  000DF2  0E00               	movlw	0
  2492  000DF4  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2493  000DF6  5005               	movf	___aldiv@divisor^0,w,c
  2494  000DF8  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2495  000DFA  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2496  000DFC  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2497  000DFE  B4D8               	btfsc	status,2,c
  2498  000E00  EF04  F007         	goto	u1211
  2499  000E04  EF06  F007         	goto	u1210
  2500  000E08                     u1211:
  2501  000E08  EF3C  F007         	goto	l1899
  2502  000E0C                     u1210:
  2503  000E0C  0E01               	movlw	1
  2504  000E0E  6E09               	movwf	___aldiv@counter^0,c
  2505  000E10  EF10  F007         	goto	l1885
  2506  000E14                     l1883:
  2507  000E14  90D8               	bcf	status,0,c
  2508  000E16  3605               	rlcf	___aldiv@divisor^0,f,c
  2509  000E18  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2510  000E1A  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2511  000E1C  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2512  000E1E  2A09               	incf	___aldiv@counter^0,f,c
  2513  000E20                     l1885:
  2514  000E20  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2515  000E22  EF15  F007         	goto	u1221
  2516  000E26  EF17  F007         	goto	u1220
  2517  000E2A                     u1221:
  2518  000E2A  EF0A  F007         	goto	l1883
  2519  000E2E                     u1220:
  2520  000E2E                     l1887:
  2521  000E2E  90D8               	bcf	status,0,c
  2522  000E30  360B               	rlcf	___aldiv@quotient^0,f,c
  2523  000E32  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2524  000E34  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2525  000E36  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2526  000E38  5005               	movf	___aldiv@divisor^0,w,c
  2527  000E3A  5C01               	subwf	___aldiv@dividend^0,w,c
  2528  000E3C  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2529  000E3E  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2530  000E40  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2531  000E42  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2532  000E44  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2533  000E46  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2534  000E48  A0D8               	btfss	status,0,c
  2535  000E4A  EF29  F007         	goto	u1231
  2536  000E4E  EF2B  F007         	goto	u1230
  2537  000E52                     u1231:
  2538  000E52  EF34  F007         	goto	l1895
  2539  000E56                     u1230:
  2540  000E56  5005               	movf	___aldiv@divisor^0,w,c
  2541  000E58  5E01               	subwf	___aldiv@dividend^0,f,c
  2542  000E5A  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2543  000E5C  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2544  000E5E  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2545  000E60  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2546  000E62  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2547  000E64  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2548  000E66  800B               	bsf	___aldiv@quotient^0,0,c
  2549  000E68                     l1895:
  2550  000E68  90D8               	bcf	status,0,c
  2551  000E6A  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2552  000E6C  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2553  000E6E  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2554  000E70  3205               	rrcf	___aldiv@divisor^0,f,c
  2555  000E72  2E09               	decfsz	___aldiv@counter^0,f,c
  2556  000E74  EF17  F007         	goto	l1887
  2557  000E78                     l1899:
  2558  000E78  500A               	movf	___aldiv@sign^0,w,c
  2559  000E7A  B4D8               	btfsc	status,2,c
  2560  000E7C  EF42  F007         	goto	u1241
  2561  000E80  EF44  F007         	goto	u1240
  2562  000E84                     u1241:
  2563  000E84  EF4C  F007         	goto	l1903
  2564  000E88                     u1240:
  2565  000E88  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2566  000E8A  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2567  000E8C  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2568  000E8E  6C0B               	negf	___aldiv@quotient^0,c
  2569  000E90  0E00               	movlw	0
  2570  000E92  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2571  000E94  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2572  000E96  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2573  000E98                     l1903:
  2574  000E98  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2575  000E9C  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2576  000EA0  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2577  000EA4  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2578  000EA8  0012               	return		;funcret
  2579  000EAA                     __end_of___aldiv:
  2580                           	callstack 0
  2581                           
  2582 ;; *************** function _lcd_str *****************
  2583 ;; Defined at:
  2584 ;;		line 76 in file "lcd.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  str             2    7[COMRAM] PTR const unsigned char 
  2587 ;;		 -> STR_17(9), STR_16(14), STR_15(13), STR_14(15), 
  2588 ;;		 -> date(10), STR_13(12), STR_12(3), STR_11(3), 
  2589 ;;		 -> STR_10(3), STR_9(17), STR_8(9), STR_7(17), 
  2590 ;;		 -> STR_6(14), STR_5(17), STR_4(17), STR_3(9), 
  2591 ;;		 -> STR_2(9), STR_1(13), 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  i               1   11[COMRAM] unsigned char 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2603 ;;      Params:         2       0       0       0       0       0       0
  2604 ;;      Locals:         1       0       0       0       0       0       0
  2605 ;;      Temps:          2       0       0       0       0       0       0
  2606 ;;      Totals:         5       0       0       0       0       0       0
  2607 ;;Total ram usage:        5 bytes
  2608 ;; Hardware stack levels used: 1
  2609 ;; Hardware stack levels required when called: 2
  2610 ;; This function calls:
  2611 ;;		_lcd_dat
  2612 ;; This function is called by:
  2613 ;;		_main
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           	psect	text14
  2618  001004                     __ptext14:
  2619                           	callstack 0
  2620  001004                     _lcd_str:
  2621                           	callstack 28
  2622  001004                     
  2623                           ;lcd.c: 76: void lcd_str(const char* str);lcd.c: 77: {;lcd.c: 78:  unsigned char i=0;
  2624  001004  0E00               	movlw	0
  2625  001006  6E0C               	movwf	lcd_str@i^0,c
  2626                           
  2627                           ;lcd.c: 80:  while(str[i] != 0 )
  2628  001008  EF1F  F008         	goto	l2047
  2629  00100C                     l2043:
  2630                           
  2631                           ;lcd.c: 81:  {;lcd.c: 82:    lcd_dat(str[i]);
  2632  00100C  500C               	movf	lcd_str@i^0,w,c
  2633  00100E  2408               	addwf	lcd_str@str^0,w,c
  2634  001010  6E0A               	movwf	??_lcd_str^0,c
  2635  001012  0E00               	movlw	0
  2636  001014  2009               	addwfc	(lcd_str@str+1)^0,w,c
  2637  001016  6E0B               	movwf	(??_lcd_str+1)^0,c
  2638  001018  C00A  FFF6         	movff	??_lcd_str,tblptrl
  2639  00101C  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  2640  001020  6AF8               	clrf	tblptru,c
  2641  001022  0E05               	movlw	(high __ramtop+-1)
  2642  001024  64F7               	cpfsgt	tblptrh,c
  2643  001026  D003               	bra	u1317
  2644  001028  0008               	tblrd		*
  2645  00102A  50F5               	movf	tablat,w,c
  2646  00102C  D005               	bra	u1310
  2647  00102E                     u1317:
  2648  00102E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2649  001032  CFF7 FFEA          	movff	tblptrh,fsr0h
  2650  001036  50EF               	movf	indf0,w,c
  2651  001038                     u1310:
  2652  001038  EC12  F009         	call	_lcd_dat
  2653  00103C                     
  2654                           ;lcd.c: 83:    i++;
  2655  00103C  2A0C               	incf	lcd_str@i^0,f,c
  2656  00103E                     l2047:
  2657                           
  2658                           ;lcd.c: 80:  while(str[i] != 0 )
  2659  00103E  500C               	movf	lcd_str@i^0,w,c
  2660  001040  2408               	addwf	lcd_str@str^0,w,c
  2661  001042  6E0A               	movwf	??_lcd_str^0,c
  2662  001044  0E00               	movlw	0
  2663  001046  2009               	addwfc	(lcd_str@str+1)^0,w,c
  2664  001048  6E0B               	movwf	(??_lcd_str+1)^0,c
  2665  00104A  C00A  FFF6         	movff	??_lcd_str,tblptrl
  2666  00104E  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  2667  001052  6AF8               	clrf	tblptru,c
  2668  001054  0E05               	movlw	(high __ramtop+-1)
  2669  001056  64F7               	cpfsgt	tblptrh,c
  2670  001058  D003               	bra	u1327
  2671  00105A  0008               	tblrd		*
  2672  00105C  50F5               	movf	tablat,w,c
  2673  00105E  D005               	bra	u1320
  2674  001060                     u1327:
  2675  001060  CFF6 FFE9          	movff	tblptrl,fsr0l
  2676  001064  CFF7 FFEA          	movff	tblptrh,fsr0h
  2677  001068  50EF               	movf	indf0,w,c
  2678  00106A                     u1320:
  2679  00106A  0900               	iorlw	0
  2680  00106C  A4D8               	btfss	status,2,c
  2681  00106E  EF3B  F008         	goto	u1331
  2682  001072  EF3D  F008         	goto	u1330
  2683  001076                     u1331:
  2684  001076  EF06  F008         	goto	l2043
  2685  00107A                     u1330:
  2686  00107A  0012               	return		;funcret
  2687  00107C                     __end_of_lcd_str:
  2688                           	callstack 0
  2689                           
  2690 ;; *************** function _lcd_dat *****************
  2691 ;; Defined at:
  2692 ;;		line 46 in file "lcd.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  val             1    wreg     unsigned char 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  val             1    6[COMRAM] unsigned char 
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      void 
  2699 ;; Registers used:
  2700 ;;		wreg, status,2, status,0, cstack
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2706 ;;      Params:         0       0       0       0       0       0       0
  2707 ;;      Locals:         1       0       0       0       0       0       0
  2708 ;;      Temps:          0       0       0       0       0       0       0
  2709 ;;      Totals:         1       0       0       0       0       0       0
  2710 ;;Total ram usage:        1 bytes
  2711 ;; Hardware stack levels used: 1
  2712 ;; Hardware stack levels required when called: 1
  2713 ;; This function calls:
  2714 ;;		_atraso_ms
  2715 ;;		_lcd_wr
  2716 ;; This function is called by:
  2717 ;;		_main
  2718 ;;		_lcd_str
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text15
  2723  001224                     __ptext15:
  2724                           	callstack 0
  2725  001224                     _lcd_dat:
  2726                           	callstack 28
  2727                           
  2728                           ;incstack = 0
  2729                           ;lcd_dat@val stored from wreg
  2730  001224  6E07               	movwf	lcd_dat@val^0,c
  2731  001226                     
  2732                           ;lcd.c: 46: void lcd_dat(unsigned char val);lcd.c: 47: {;lcd.c: 48:  PORTEbits.RE1=1;
  2733  001226  8284               	bsf	132,1,c	;volatile
  2734  001228                     
  2735                           ;lcd.c: 49:         lcd_wr(val);
  2736  001228  5007               	movf	lcd_dat@val^0,w,c
  2737  00122A  EC99  F009         	call	_lcd_wr
  2738  00122E                     
  2739                           ;lcd.c: 50:         PORTEbits.RE2=1;
  2740  00122E  8484               	bsf	132,2,c	;volatile
  2741  001230                     
  2742                           ;lcd.c: 51:         atraso_ms(3);
  2743  001230  0E00               	movlw	0
  2744  001232  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2745  001234  0E03               	movlw	3
  2746  001236  6E01               	movwf	atraso_ms@valor^0,c
  2747  001238  EC3E  F008         	call	_atraso_ms	;wreg free
  2748  00123C                     
  2749                           ;lcd.c: 52:         PORTEbits.RE1=0;
  2750  00123C  9284               	bcf	132,1,c	;volatile
  2751  00123E                     
  2752                           ;lcd.c: 53:         atraso_ms(3);
  2753  00123E  0E00               	movlw	0
  2754  001240  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2755  001242  0E03               	movlw	3
  2756  001244  6E01               	movwf	atraso_ms@valor^0,c
  2757  001246  EC3E  F008         	call	_atraso_ms	;wreg free
  2758  00124A                     
  2759                           ;lcd.c: 54:  PORTEbits.RE1=1;
  2760  00124A  8284               	bsf	132,1,c	;volatile
  2761  00124C  0012               	return		;funcret
  2762  00124E                     __end_of_lcd_dat:
  2763                           	callstack 0
  2764                           
  2765 ;; *************** function _lcd_init *****************
  2766 ;; Defined at:
  2767 ;;		line 57 in file "lcd.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;		None
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;		None
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  1    wreg      void 
  2774 ;; Registers used:
  2775 ;;		wreg, status,2, status,0, cstack
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2781 ;;      Params:         0       0       0       0       0       0       0
  2782 ;;      Locals:         0       0       0       0       0       0       0
  2783 ;;      Temps:          0       0       0       0       0       0       0
  2784 ;;      Totals:         0       0       0       0       0       0       0
  2785 ;;Total ram usage:        0 bytes
  2786 ;; Hardware stack levels used: 1
  2787 ;; Hardware stack levels required when called: 2
  2788 ;; This function calls:
  2789 ;;		_atraso_ms
  2790 ;;		_lcd_cmd
  2791 ;; This function is called by:
  2792 ;;		_main
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text16
  2797  00119C                     __ptext16:
  2798                           	callstack 0
  2799  00119C                     _lcd_init:
  2800                           	callstack 28
  2801  00119C                     
  2802                           ;lcd.c: 59:  PORTEbits.RE1=0;
  2803  00119C  9284               	bcf	132,1,c	;volatile
  2804                           
  2805                           ;lcd.c: 60:  PORTEbits.RE2=0;
  2806  00119E  9484               	bcf	132,2,c	;volatile
  2807  0011A0                     
  2808                           ;lcd.c: 61:  atraso_ms(20);
  2809  0011A0  0E00               	movlw	0
  2810  0011A2  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2811  0011A4  0E14               	movlw	20
  2812  0011A6  6E01               	movwf	atraso_ms@valor^0,c
  2813  0011A8  EC3E  F008         	call	_atraso_ms	;wreg free
  2814  0011AC                     
  2815                           ;lcd.c: 62:  PORTEbits.RE1=1;
  2816  0011AC  8284               	bsf	132,1,c	;volatile
  2817                           
  2818                           ;lcd.c: 64:  lcd_cmd(0x38);
  2819  0011AE  0E38               	movlw	56
  2820  0011B0  EC27  F009         	call	_lcd_cmd
  2821                           
  2822                           ;lcd.c: 65:  atraso_ms(5);
  2823  0011B4  0E00               	movlw	0
  2824  0011B6  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2825  0011B8  0E05               	movlw	5
  2826  0011BA  6E01               	movwf	atraso_ms@valor^0,c
  2827  0011BC  EC3E  F008         	call	_atraso_ms	;wreg free
  2828                           
  2829                           ;lcd.c: 66:  lcd_cmd(0x38);
  2830  0011C0  0E38               	movlw	56
  2831  0011C2  EC27  F009         	call	_lcd_cmd
  2832                           
  2833                           ;lcd.c: 67:         atraso_ms(1);
  2834  0011C6  0E00               	movlw	0
  2835  0011C8  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2836  0011CA  0E01               	movlw	1
  2837  0011CC  6E01               	movwf	atraso_ms@valor^0,c
  2838  0011CE  EC3E  F008         	call	_atraso_ms	;wreg free
  2839                           
  2840                           ;lcd.c: 68:  lcd_cmd(0x38);
  2841  0011D2  0E38               	movlw	56
  2842  0011D4  EC27  F009         	call	_lcd_cmd
  2843                           
  2844                           ;lcd.c: 69:  lcd_cmd(0x08);
  2845  0011D8  0E08               	movlw	8
  2846  0011DA  EC27  F009         	call	_lcd_cmd
  2847                           
  2848                           ;lcd.c: 70:  lcd_cmd(0x0F);
  2849  0011DE  0E0F               	movlw	15
  2850  0011E0  EC27  F009         	call	_lcd_cmd
  2851                           
  2852                           ;lcd.c: 71:  lcd_cmd(0x01);
  2853  0011E4  0E01               	movlw	1
  2854  0011E6  EC27  F009         	call	_lcd_cmd
  2855                           
  2856                           ;lcd.c: 72:  lcd_cmd(0x38);
  2857  0011EA  0E38               	movlw	56
  2858  0011EC  EC27  F009         	call	_lcd_cmd
  2859                           
  2860                           ;lcd.c: 73:         lcd_cmd(0x80);
  2861  0011F0  0E80               	movlw	128
  2862  0011F2  EC27  F009         	call	_lcd_cmd
  2863  0011F6  0012               	return		;funcret
  2864  0011F8                     __end_of_lcd_init:
  2865                           	callstack 0
  2866                           
  2867 ;; *************** function _lcd_cmd *****************
  2868 ;; Defined at:
  2869 ;;		line 35 in file "lcd.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  val             1    wreg     unsigned char 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  val             1    6[COMRAM] unsigned char 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2883 ;;      Params:         0       0       0       0       0       0       0
  2884 ;;      Locals:         1       0       0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0
  2886 ;;      Totals:         1       0       0       0       0       0       0
  2887 ;;Total ram usage:        1 bytes
  2888 ;; Hardware stack levels used: 1
  2889 ;; Hardware stack levels required when called: 1
  2890 ;; This function calls:
  2891 ;;		_atraso_ms
  2892 ;;		_lcd_wr
  2893 ;; This function is called by:
  2894 ;;		_main
  2895 ;;		_lcd_init
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           	psect	text17
  2900  00124E                     __ptext17:
  2901                           	callstack 0
  2902  00124E                     _lcd_cmd:
  2903                           	callstack 28
  2904                           
  2905                           ;incstack = 0
  2906                           ;lcd_cmd@val stored from wreg
  2907  00124E  6E07               	movwf	lcd_cmd@val^0,c
  2908  001250                     
  2909                           ;lcd.c: 35: void lcd_cmd(unsigned char val);lcd.c: 36: {;lcd.c: 37:  PORTEbits.RE1=1;
  2910  001250  8284               	bsf	132,1,c	;volatile
  2911  001252                     
  2912                           ;lcd.c: 38:         lcd_wr(val);
  2913  001252  5007               	movf	lcd_cmd@val^0,w,c
  2914  001254  EC99  F009         	call	_lcd_wr
  2915  001258                     
  2916                           ;lcd.c: 39:         PORTEbits.RE2=0;
  2917  001258  9484               	bcf	132,2,c	;volatile
  2918  00125A                     
  2919                           ;lcd.c: 40:         atraso_ms(3);
  2920  00125A  0E00               	movlw	0
  2921  00125C  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2922  00125E  0E03               	movlw	3
  2923  001260  6E01               	movwf	atraso_ms@valor^0,c
  2924  001262  EC3E  F008         	call	_atraso_ms	;wreg free
  2925  001266                     
  2926                           ;lcd.c: 41:         PORTEbits.RE1=0;
  2927  001266  9284               	bcf	132,1,c	;volatile
  2928  001268                     
  2929                           ;lcd.c: 42:         atraso_ms(3);
  2930  001268  0E00               	movlw	0
  2931  00126A  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2932  00126C  0E03               	movlw	3
  2933  00126E  6E01               	movwf	atraso_ms@valor^0,c
  2934  001270  EC3E  F008         	call	_atraso_ms	;wreg free
  2935  001274                     
  2936                           ;lcd.c: 43:  PORTEbits.RE1=1;
  2937  001274  8284               	bsf	132,1,c	;volatile
  2938  001276  0012               	return		;funcret
  2939  001278                     __end_of_lcd_cmd:
  2940                           	callstack 0
  2941                           
  2942 ;; *************** function _lcd_wr *****************
  2943 ;; Defined at:
  2944 ;;		line 30 in file "lcd.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  val             1    wreg     unsigned char 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  val             1    0[COMRAM] unsigned char 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      void 
  2951 ;; Registers used:
  2952 ;;		wreg
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2958 ;;      Params:         0       0       0       0       0       0       0
  2959 ;;      Locals:         1       0       0       0       0       0       0
  2960 ;;      Temps:          0       0       0       0       0       0       0
  2961 ;;      Totals:         1       0       0       0       0       0       0
  2962 ;;Total ram usage:        1 bytes
  2963 ;; Hardware stack levels used: 1
  2964 ;; This function calls:
  2965 ;;		Nothing
  2966 ;; This function is called by:
  2967 ;;		_lcd_cmd
  2968 ;;		_lcd_dat
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text18
  2973  001332                     __ptext18:
  2974                           	callstack 0
  2975  001332                     _lcd_wr:
  2976                           	callstack 28
  2977                           
  2978                           ;incstack = 0
  2979                           ;lcd_wr@val stored from wreg
  2980  001332  6E01               	movwf	lcd_wr@val^0,c
  2981  001334                     
  2982                           ;lcd.c: 30: void lcd_wr(unsigned char val);lcd.c: 31: {;lcd.c: 32:   PORTD=val;
  2983  001334  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  2984  001338  0012               	return		;funcret
  2985  00133A                     __end_of_lcd_wr:
  2986                           	callstack 0
  2987                           
  2988 ;; *************** function _atraso_ms *****************
  2989 ;; Defined at:
  2990 ;;		line 26 in file "atraso.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  valor           2    0[COMRAM] unsigned int 
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;  i               2    2[COMRAM] unsigned int 
  2995 ;;  k               1    5[COMRAM] volatile unsigned char 
  2996 ;;  j               1    4[COMRAM] volatile unsigned char 
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1    wreg      void 
  2999 ;; Registers used:
  3000 ;;		wreg, status,2, status,0
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3006 ;;      Params:         2       0       0       0       0       0       0
  3007 ;;      Locals:         4       0       0       0       0       0       0
  3008 ;;      Temps:          0       0       0       0       0       0       0
  3009 ;;      Totals:         6       0       0       0       0       0       0
  3010 ;;Total ram usage:        6 bytes
  3011 ;; Hardware stack levels used: 1
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_main
  3016 ;;		_lcd_cmd
  3017 ;;		_lcd_dat
  3018 ;;		_lcd_init
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text19
  3023  00107C                     __ptext19:
  3024                           	callstack 0
  3025  00107C                     _atraso_ms:
  3026                           	callstack 28
  3027  00107C                     
  3028                           ;atraso.c: 27:     unsigned int i;;atraso.c: 28:     volatile unsigned char j, k;;atraso
      +                          .c: 30:     for (i = 0; i < valor; i++) {
  3029  00107C  0E00               	movlw	0
  3030  00107E  6E04               	movwf	(atraso_ms@i+1)^0,c
  3031  001080  0E00               	movlw	0
  3032  001082  6E03               	movwf	atraso_ms@i^0,c
  3033  001084  EF64  F008         	goto	l1829
  3034  001088                     l1807:
  3035                           
  3036                           ;atraso.c: 31:         for (j = 0; j < 41; j++) {
  3037  001088  0E00               	movlw	0
  3038  00108A  6E05               	movwf	atraso_ms@j^0,c	;volatile
  3039  00108C                     l1809:
  3040  00108C  0E28               	movlw	40
  3041  00108E  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  3042  001090  EF4C  F008         	goto	u1131
  3043  001094  EF4E  F008         	goto	u1130
  3044  001098                     u1131:
  3045  001098  EF50  F008         	goto	l1813
  3046  00109C                     u1130:
  3047  00109C  EF62  F008         	goto	l1827
  3048  0010A0                     l1813:
  3049                           
  3050                           ;atraso.c: 32:             for (k = 0; k < 3; k++);
  3051  0010A0  0E00               	movlw	0
  3052  0010A2  6E06               	movwf	atraso_ms@k^0,c	;volatile
  3053  0010A4                     l1815:
  3054  0010A4  0E02               	movlw	2
  3055  0010A6  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  3056  0010A8  EF58  F008         	goto	u1141
  3057  0010AC  EF5A  F008         	goto	u1140
  3058  0010B0                     u1141:
  3059  0010B0  EF5C  F008         	goto	l1819
  3060  0010B4                     u1140:
  3061  0010B4  EF5F  F008         	goto	l1823
  3062  0010B8                     l1819:
  3063  0010B8  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  3064  0010BA  EF52  F008         	goto	l1815
  3065  0010BE                     l1823:
  3066                           
  3067                           ;atraso.c: 33:         }
  3068  0010BE  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  3069  0010C0  EF46  F008         	goto	l1809
  3070  0010C4                     l1827:
  3071                           
  3072                           ;atraso.c: 34:     }
  3073  0010C4  4A03               	infsnz	atraso_ms@i^0,f,c
  3074  0010C6  2A04               	incf	(atraso_ms@i+1)^0,f,c
  3075  0010C8                     l1829:
  3076  0010C8  5001               	movf	atraso_ms@valor^0,w,c
  3077  0010CA  5C03               	subwf	atraso_ms@i^0,w,c
  3078  0010CC  5002               	movf	(atraso_ms@valor+1)^0,w,c
  3079  0010CE  5804               	subwfb	(atraso_ms@i+1)^0,w,c
  3080  0010D0  A0D8               	btfss	status,0,c
  3081  0010D2  EF6D  F008         	goto	u1151
  3082  0010D6  EF6F  F008         	goto	u1150
  3083  0010DA                     u1151:
  3084  0010DA  EF44  F008         	goto	l1807
  3085  0010DE                     u1150:
  3086  0010DE  0012               	return		;funcret
  3087  0010E0                     __end_of_atraso_ms:
  3088                           	callstack 0
  3089                           
  3090 ;; *************** function _kpRead *****************
  3091 ;; Defined at:
  3092 ;;		line 35 in file "keypad.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;		None
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  2    0[COMRAM] unsigned int 
  3099 ;; Registers used:
  3100 ;;		None
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3106 ;;      Params:         2       0       0       0       0       0       0
  3107 ;;      Locals:         0       0       0       0       0       0       0
  3108 ;;      Temps:          0       0       0       0       0       0       0
  3109 ;;      Totals:         2       0       0       0       0       0       0
  3110 ;;Total ram usage:        2 bytes
  3111 ;; Hardware stack levels used: 1
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_main
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text20
  3120  00131E                     __ptext20:
  3121                           	callstack 0
  3122  00131E                     _kpRead:
  3123                           	callstack 30
  3124  00131E                     
  3125                           ;keypad.c: 36:     return valor;
  3126  00131E  C05D  F001         	movff	_valor,?_kpRead
  3127  001322  C05E  F002         	movff	_valor+1,?_kpRead+1
  3128  001326  0012               	return		;funcret
  3129  001328                     __end_of_kpRead:
  3130                           	callstack 0
  3131                           
  3132 ;; *************** function _kpInit *****************
  3133 ;; Defined at:
  3134 ;;		line 87 in file "keypad.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;		None
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      void 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, status,0
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3148 ;;      Params:         0       0       0       0       0       0       0
  3149 ;;      Locals:         0       0       0       0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0       0       0
  3151 ;;      Totals:         0       0       0       0       0       0       0
  3152 ;;Total ram usage:        0 bytes
  3153 ;; Hardware stack levels used: 1
  3154 ;; This function calls:
  3155 ;;		Nothing
  3156 ;; This function is called by:
  3157 ;;		_main
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           	psect	text21
  3162  001328                     __ptext21:
  3163                           	callstack 0
  3164  001328                     _kpInit:
  3165                           	callstack 30
  3166  001328                     
  3167                           ;keypad.c: 89:     TRISB &= 0x07;
  3168  001328  0E07               	movlw	7
  3169  00132A  1693               	andwf	147,f,c	;volatile
  3170                           
  3171                           ;keypad.c: 91:     TRISD |= 0x0f;
  3172  00132C  0E0F               	movlw	15
  3173  00132E  1295               	iorwf	149,f,c	;volatile
  3174  001330  0012               	return		;funcret
  3175  001332                     __end_of_kpInit:
  3176                           	callstack 0
  3177                           
  3178 ;; *************** function _kpDebounce *****************
  3179 ;; Defined at:
  3180 ;;		line 39 in file "keypad.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;		None
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  k               2    6[COMRAM] int 
  3185 ;;  i               1    9[COMRAM] unsigned char 
  3186 ;;  j               1    8[COMRAM] unsigned char 
  3187 ;;  old_D           1    5[COMRAM] unsigned char 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      void 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0, prodl, prodh
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3197 ;;      Params:         0       0       0       0       0       0       0
  3198 ;;      Locals:         5       0       0       0       0       0       0
  3199 ;;      Temps:          5       0       0       0       0       0       0
  3200 ;;      Totals:        10       0       0       0       0       0       0
  3201 ;;Total ram usage:       10 bytes
  3202 ;; Hardware stack levels used: 1
  3203 ;; This function calls:
  3204 ;;		Nothing
  3205 ;; This function is called by:
  3206 ;;		_main
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text22
  3211  000C24                     __ptext22:
  3212                           	callstack 0
  3213  000C24                     _kpDebounce:
  3214                           	callstack 30
  3215  000C24                     
  3216                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  3217  000C24  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  3218  000C28                     
  3219                           ;keypad.c: 51:     TRISD |= 0x0f;
  3220  000C28  0E0F               	movlw	15
  3221  000C2A  1295               	iorwf	149,f,c	;volatile
  3222  000C2C                     
  3223                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  3224  000C2C  0E00               	movlw	0
  3225  000C2E  6E0A               	movwf	kpDebounce@i^0,c
  3226  000C30                     l2061:
  3227                           
  3228                           ;keypad.c: 55:         TRISB &= 0xF8;
  3229  000C30  0EF8               	movlw	248
  3230  000C32  1693               	andwf	147,f,c	;volatile
  3231                           
  3232                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  3233  000C34  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  3234  000C38  0E01               	movlw	1
  3235  000C3A  6E02               	movwf	(??_kpDebounce+1)^0,c
  3236  000C3C  2A01               	incf	??_kpDebounce^0,f,c
  3237  000C3E  EF23  F006         	goto	u1344
  3238  000C42                     u1345:
  3239  000C42  90D8               	bcf	status,0,c
  3240  000C44  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3241  000C46                     u1344:
  3242  000C46  2E01               	decfsz	??_kpDebounce^0,f,c
  3243  000C48  EF21  F006         	goto	u1345
  3244  000C4C  5002               	movf	(??_kpDebounce+1)^0,w,c
  3245  000C4E  1293               	iorwf	147,f,c	;volatile
  3246                           
  3247                           ;keypad.c: 59:         PORTB |= 0x07;
  3248  000C50  0E07               	movlw	7
  3249  000C52  1281               	iorwf	129,f,c	;volatile
  3250                           
  3251                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  3252  000C54  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  3253  000C58  0E01               	movlw	1
  3254  000C5A  6E02               	movwf	(??_kpDebounce+1)^0,c
  3255  000C5C  2A01               	incf	??_kpDebounce^0,f,c
  3256  000C5E  EF33  F006         	goto	u1354
  3257  000C62                     u1355:
  3258  000C62  90D8               	bcf	status,0,c
  3259  000C64  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3260  000C66                     u1354:
  3261  000C66  2E01               	decfsz	??_kpDebounce^0,f,c
  3262  000C68  EF31  F006         	goto	u1355
  3263  000C6C  5002               	movf	(??_kpDebounce+1)^0,w,c
  3264  000C6E  0AFF               	xorlw	255
  3265  000C70  1681               	andwf	129,f,c	;volatile
  3266  000C72                     
  3267                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  3268  000C72  0E00               	movlw	0
  3269  000C74  6E08               	movwf	(kpDebounce@k+1)^0,c
  3270  000C76  0E00               	movlw	0
  3271  000C78  6E07               	movwf	kpDebounce@k^0,c
  3272  000C7A                     l2069:
  3273  000C7A  4A07               	infsnz	kpDebounce@k^0,f,c
  3274  000C7C  2A08               	incf	(kpDebounce@k+1)^0,f,c
  3275  000C7E  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  3276  000C80  EF4B  F006         	goto	u1361
  3277  000C84  5008               	movf	(kpDebounce@k+1)^0,w,c
  3278  000C86  E109               	bnz	u1360
  3279  000C88  0E0A               	movlw	10
  3280  000C8A  5C07               	subwf	kpDebounce@k^0,w,c
  3281  000C8C  A0D8               	btfss	status,0,c
  3282  000C8E  EF4B  F006         	goto	u1361
  3283  000C92  EF4D  F006         	goto	u1360
  3284  000C96                     u1361:
  3285  000C96  EF3D  F006         	goto	l2069
  3286  000C9A                     u1360:
  3287  000C9A                     
  3288                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  3289  000C9A  0E00               	movlw	0
  3290  000C9C  6E09               	movwf	kpDebounce@j^0,c
  3291  000C9E                     l2079:
  3292                           
  3293                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  3294  000C9E  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  3295  000CA2  0E01               	movlw	1
  3296  000CA4  6E02               	movwf	(??_kpDebounce+1)^0,c
  3297  000CA6  2A01               	incf	??_kpDebounce^0,f,c
  3298  000CA8  EF58  F006         	goto	u1374
  3299  000CAC                     u1375:
  3300  000CAC  90D8               	bcf	status,0,c
  3301  000CAE  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3302  000CB0                     u1374:
  3303  000CB0  2E01               	decfsz	??_kpDebounce^0,f,c
  3304  000CB2  EF56  F006         	goto	u1375
  3305  000CB6  5002               	movf	(??_kpDebounce+1)^0,w,c
  3306  000CB8  1483               	andwf	131,w,c	;volatile
  3307  000CBA  0900               	iorlw	0
  3308  000CBC  A4D8               	btfss	status,2,c
  3309  000CBE  EF63  F006         	goto	u1381
  3310  000CC2  EF65  F006         	goto	u1380
  3311  000CC6                     u1381:
  3312  000CC6  EF7D  F006         	goto	l2083
  3313  000CCA                     u1380:
  3314  000CCA                     
  3315                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  3316  000CCA  500A               	movf	kpDebounce@i^0,w,c
  3317  000CCC  0D04               	mullw	4
  3318  000CCE  50F3               	movf	243,w,c
  3319  000CD0  2409               	addwf	kpDebounce@j^0,w,c
  3320  000CD2  6E01               	movwf	??_kpDebounce^0,c
  3321  000CD4  0E01               	movlw	1
  3322  000CD6  6E02               	movwf	(??_kpDebounce+1)^0,c
  3323  000CD8  0E00               	movlw	0
  3324  000CDA  6E03               	movwf	(??_kpDebounce+2)^0,c
  3325  000CDC  2A01               	incf	??_kpDebounce^0,f,c
  3326  000CDE  EF74  F006         	goto	u1394
  3327  000CE2                     u1395:
  3328  000CE2  90D8               	bcf	status,0,c
  3329  000CE4  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3330  000CE6  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  3331  000CE8                     u1394:
  3332  000CE8  2E01               	decfsz	??_kpDebounce^0,f,c
  3333  000CEA  EF71  F006         	goto	u1395
  3334  000CEE  5002               	movf	(??_kpDebounce+1)^0,w,c
  3335  000CF0  125B               	iorwf	kpDebounce@valorNovo^0,f,c
  3336  000CF2  5003               	movf	(??_kpDebounce+2)^0,w,c
  3337  000CF4  125C               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  3338                           
  3339                           ;keypad.c: 69:             } else {
  3340  000CF6  EF97  F006         	goto	l2085
  3341  000CFA                     l2083:
  3342                           
  3343                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  3344  000CFA  500A               	movf	kpDebounce@i^0,w,c
  3345  000CFC  0D04               	mullw	4
  3346  000CFE  50F3               	movf	243,w,c
  3347  000D00  2409               	addwf	kpDebounce@j^0,w,c
  3348  000D02  6E01               	movwf	??_kpDebounce^0,c
  3349  000D04  0E01               	movlw	1
  3350  000D06  6E02               	movwf	(??_kpDebounce+1)^0,c
  3351  000D08  0E00               	movlw	0
  3352  000D0A  6E03               	movwf	(??_kpDebounce+2)^0,c
  3353  000D0C  2A01               	incf	??_kpDebounce^0,f,c
  3354  000D0E  EF8C  F006         	goto	u1404
  3355  000D12                     u1405:
  3356  000D12  90D8               	bcf	status,0,c
  3357  000D14  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3358  000D16  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  3359  000D18                     u1404:
  3360  000D18  2E01               	decfsz	??_kpDebounce^0,f,c
  3361  000D1A  EF89  F006         	goto	u1405
  3362  000D1E  1C02               	comf	(??_kpDebounce+1)^0,w,c
  3363  000D20  6E04               	movwf	(??_kpDebounce+3)^0,c
  3364  000D22  1C03               	comf	(??_kpDebounce+2)^0,w,c
  3365  000D24  6E05               	movwf	(??_kpDebounce+4)^0,c
  3366  000D26  5004               	movf	(??_kpDebounce+3)^0,w,c
  3367  000D28  165B               	andwf	kpDebounce@valorNovo^0,f,c
  3368  000D2A  5005               	movf	(??_kpDebounce+4)^0,w,c
  3369  000D2C  165C               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  3370  000D2E                     l2085:
  3371                           
  3372                           ;keypad.c: 72:         }
  3373  000D2E  2A09               	incf	kpDebounce@j^0,f,c
  3374  000D30  0E03               	movlw	3
  3375  000D32  6409               	cpfsgt	kpDebounce@j^0,c
  3376  000D34  EF9E  F006         	goto	u1411
  3377  000D38  EFA0  F006         	goto	u1410
  3378  000D3C                     u1411:
  3379  000D3C  EF4F  F006         	goto	l2079
  3380  000D40                     u1410:
  3381  000D40                     
  3382                           ;keypad.c: 73:     }
  3383  000D40  2A0A               	incf	kpDebounce@i^0,f,c
  3384  000D42  0E02               	movlw	2
  3385  000D44  640A               	cpfsgt	kpDebounce@i^0,c
  3386  000D46  EFA7  F006         	goto	u1421
  3387  000D4A  EFA9  F006         	goto	u1420
  3388  000D4E                     u1421:
  3389  000D4E  EF18  F006         	goto	l2061
  3390  000D52                     u1420:
  3391  000D52                     
  3392                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  3393  000D52  505B               	movf	kpDebounce@valorNovo^0,w,c
  3394  000D54  1859               	xorwf	kpDebounce@valorAntigo^0,w,c
  3395  000D56  E107               	bnz	u1431
  3396  000D58  505C               	movf	(kpDebounce@valorNovo+1)^0,w,c
  3397  000D5A  185A               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  3398  000D5C  A4D8               	btfss	status,2,c
  3399  000D5E  EFB3  F006         	goto	u1431
  3400  000D62  EFB5  F006         	goto	u1430
  3401  000D66                     u1431:
  3402  000D66  EFB8  F006         	goto	l2097
  3403  000D6A                     u1430:
  3404  000D6A                     
  3405                           ;keypad.c: 75:         tempo--;
  3406  000D6A  065F               	decf	kpDebounce@tempo^0,f,c
  3407                           
  3408                           ;keypad.c: 76:     } else {
  3409  000D6C  EFBE  F006         	goto	l222
  3410  000D70                     l2097:
  3411                           
  3412                           ;keypad.c: 77:         tempo = 10;
  3413  000D70  0E0A               	movlw	10
  3414  000D72  6E5F               	movwf	kpDebounce@tempo^0,c
  3415  000D74                     
  3416                           ;keypad.c: 78:         valorAntigo = valorNovo;
  3417  000D74  C05B  F059         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  3418  000D78  C05C  F05A         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  3419  000D7C                     l222:
  3420                           
  3421                           ;keypad.c: 80:     if (tempo == 0) {
  3422  000D7C  505F               	movf	kpDebounce@tempo^0,w,c
  3423  000D7E  A4D8               	btfss	status,2,c
  3424  000D80  EFC4  F006         	goto	u1441
  3425  000D84  EFC6  F006         	goto	u1440
  3426  000D88                     u1441:
  3427  000D88  EFCA  F006         	goto	l223
  3428  000D8C                     u1440:
  3429  000D8C                     
  3430                           ;keypad.c: 81:         valor = valorAntigo;
  3431  000D8C  C059  F05D         	movff	kpDebounce@valorAntigo,_valor
  3432  000D90  C05A  F05E         	movff	kpDebounce@valorAntigo+1,_valor+1
  3433  000D94                     l223:
  3434                           
  3435                           ;keypad.c: 83:     PORTD = old_D;
  3436  000D94  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  3437  000D98                     
  3438                           ;keypad.c: 84:     TRISD = 0x00;
  3439  000D98  0E00               	movlw	0
  3440  000D9A  6E95               	movwf	149,c	;volatile
  3441  000D9C  0012               	return		;funcret
  3442  000D9E                     __end_of_kpDebounce:
  3443                           	callstack 0
  3444                           
  3445                           	psect	rparam
  3446  0000                     
  3447                           	psect	idloc
  3448                           
  3449                           ;Config register IDLOC0 @ 0x200000
  3450                           ;	unspecified, using default values
  3451  200000                     	org	2097152
  3452  200000  FF                 	db	255
  3453                           
  3454                           ;Config register IDLOC1 @ 0x200001
  3455                           ;	unspecified, using default values
  3456  200001                     	org	2097153
  3457  200001  FF                 	db	255
  3458                           
  3459                           ;Config register IDLOC2 @ 0x200002
  3460                           ;	unspecified, using default values
  3461  200002                     	org	2097154
  3462  200002  FF                 	db	255
  3463                           
  3464                           ;Config register IDLOC3 @ 0x200003
  3465                           ;	unspecified, using default values
  3466  200003                     	org	2097155
  3467  200003  FF                 	db	255
  3468                           
  3469                           ;Config register IDLOC4 @ 0x200004
  3470                           ;	unspecified, using default values
  3471  200004                     	org	2097156
  3472  200004  FF                 	db	255
  3473                           
  3474                           ;Config register IDLOC5 @ 0x200005
  3475                           ;	unspecified, using default values
  3476  200005                     	org	2097157
  3477  200005  FF                 	db	255
  3478                           
  3479                           ;Config register IDLOC6 @ 0x200006
  3480                           ;	unspecified, using default values
  3481  200006                     	org	2097158
  3482  200006  FF                 	db	255
  3483                           
  3484                           ;Config register IDLOC7 @ 0x200007
  3485                           ;	unspecified, using default values
  3486  200007                     	org	2097159
  3487  200007  FF                 	db	255
  3488                           
  3489                           	psect	config
  3490                           
  3491                           ; Padding undefined space
  3492  300000                     	org	3145728
  3493  300000  FF                 	db	255
  3494                           
  3495                           ;Config register CONFIG1H @ 0x300001
  3496                           ;	Oscillator Selection bits
  3497                           ;	OSC = HS, HS oscillator
  3498                           ;	Fail-Safe Clock Monitor Enable bit
  3499                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3500                           ;	Internal/External Oscillator Switchover bit
  3501                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3502  300001                     	org	3145729
  3503  300001  02                 	db	2
  3504                           
  3505                           ;Config register CONFIG2L @ 0x300002
  3506                           ;	Power-up Timer Enable bit
  3507                           ;	PWRT = OFF, PWRT disabled
  3508                           ;	Brown-out Reset Enable bits
  3509                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3510                           ;	Brown Out Reset Voltage bits
  3511                           ;	BORV = 0x2E, user specified literal
  3512  300002                     	org	3145730
  3513  300002  71                 	db	369
  3514                           
  3515                           ;Config register CONFIG2H @ 0x300003
  3516                           ;	Watchdog Timer Enable bit
  3517                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3518                           ;	Watchdog Timer Postscale Select bits
  3519                           ;	WDTPS = 1, 1:1
  3520  300003                     	org	3145731
  3521  300003  00                 	db	0
  3522                           
  3523                           ; Padding undefined space
  3524  300004                     	org	3145732
  3525  300004  FF                 	db	255
  3526                           
  3527                           ;Config register CONFIG3H @ 0x300005
  3528                           ;	CCP2 MUX bit
  3529                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3530                           ;	PORTB A/D Enable bit
  3531                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3532                           ;	Low-Power Timer1 Oscillator Enable bit
  3533                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3534                           ;	MCLR Pin Enable bit
  3535                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3536  300005                     	org	3145733
  3537  300005  83                 	db	131
  3538                           
  3539                           ;Config register CONFIG4L @ 0x300006
  3540                           ;	Stack Full/Underflow Reset Enable bit
  3541                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3542                           ;	Single-Supply ICSP Enable bit
  3543                           ;	LVP = OFF, Single-Supply ICSP disabled
  3544                           ;	Extended Instruction Set Enable bit
  3545                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3546                           ;	Background Debugger Enable bit
  3547                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3548  300006                     	org	3145734
  3549  300006  80                 	db	128
  3550                           
  3551                           ; Padding undefined space
  3552  300007                     	org	3145735
  3553  300007  FF                 	db	255
  3554                           
  3555                           ;Config register CONFIG5L @ 0x300008
  3556                           ;	Code Protection bit
  3557                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3558                           ;	Code Protection bit
  3559                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3560                           ;	Code Protection bit
  3561                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3562                           ;	Code Protection bit
  3563                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3564  300008                     	org	3145736
  3565  300008  0F                 	db	15
  3566                           
  3567                           ;Config register CONFIG5H @ 0x300009
  3568                           ;	Boot Block Code Protection bit
  3569                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3570                           ;	Data EEPROM Code Protection bit
  3571                           ;	CPD = OFF, Data EEPROM not code-protected
  3572  300009                     	org	3145737
  3573  300009  C0                 	db	192
  3574                           
  3575                           ;Config register CONFIG6L @ 0x30000A
  3576                           ;	Write Protection bit
  3577                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3578                           ;	Write Protection bit
  3579                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3580                           ;	Write Protection bit
  3581                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3582                           ;	Write Protection bit
  3583                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3584  30000A                     	org	3145738
  3585  30000A  0F                 	db	15
  3586                           
  3587                           ;Config register CONFIG6H @ 0x30000B
  3588                           ;	Configuration Register Write Protection bit
  3589                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3590                           ;	Boot Block Write Protection bit
  3591                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3592                           ;	Data EEPROM Write Protection bit
  3593                           ;	WRTD = OFF, Data EEPROM not write-protected
  3594  30000B                     	org	3145739
  3595  30000B  E0                 	db	224
  3596                           
  3597                           ;Config register CONFIG7L @ 0x30000C
  3598                           ;	Table Read Protection bit
  3599                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3600                           ;	Table Read Protection bit
  3601                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3602                           ;	Table Read Protection bit
  3603                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3604                           ;	Table Read Protection bit
  3605                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3606  30000C                     	org	3145740
  3607  30000C  0F                 	db	15
  3608                           
  3609                           ;Config register CONFIG7H @ 0x30000D
  3610                           ;	Boot Block Table Read Protection bit
  3611                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3612  30000D                     	org	3145741
  3613  30000D  40                 	db	64
  3614                           tosu	equ	0xFFF
  3615                           tosh	equ	0xFFE
  3616                           tosl	equ	0xFFD
  3617                           stkptr	equ	0xFFC
  3618                           pclatu	equ	0xFFB
  3619                           pclath	equ	0xFFA
  3620                           pcl	equ	0xFF9
  3621                           tblptru	equ	0xFF8
  3622                           tblptrh	equ	0xFF7
  3623                           tblptrl	equ	0xFF6
  3624                           tablat	equ	0xFF5
  3625                           prodh	equ	0xFF4
  3626                           prodl	equ	0xFF3
  3627                           indf0	equ	0xFEF
  3628                           postinc0	equ	0xFEE
  3629                           postdec0	equ	0xFED
  3630                           preinc0	equ	0xFEC
  3631                           plusw0	equ	0xFEB
  3632                           fsr0h	equ	0xFEA
  3633                           fsr0l	equ	0xFE9
  3634                           wreg	equ	0xFE8
  3635                           indf1	equ	0xFE7
  3636                           postinc1	equ	0xFE6
  3637                           postdec1	equ	0xFE5
  3638                           preinc1	equ	0xFE4
  3639                           plusw1	equ	0xFE3
  3640                           fsr1h	equ	0xFE2
  3641                           fsr1l	equ	0xFE1
  3642                           bsr	equ	0xFE0
  3643                           indf2	equ	0xFDF
  3644                           postinc2	equ	0xFDE
  3645                           postdec2	equ	0xFDD
  3646                           preinc2	equ	0xFDC
  3647                           plusw2	equ	0xFDB
  3648                           fsr2h	equ	0xFDA
  3649                           fsr2l	equ	0xFD9
  3650                           status	equ	0xFD8

Data Sizes:
    Strings     182
    Constant    0
    Data        0
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     78     105
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_17(CODE[9]), STR_16(CODE[14]), STR_15(CODE[13]), STR_14(CODE[15]), 
		 -> date(COMRAM[10]), STR_13(CODE[12]), STR_12(CODE[3]), STR_11(CODE[3]), 
		 -> STR_10(CODE[3]), STR_9(CODE[17]), STR_8(CODE[9]), STR_7(CODE[17]), 
		 -> STR_6(CODE[14]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[9]), 
		 -> STR_2(CODE[9]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_pwmFrequency
    _rtc_r->_i2c_rb
    _i2c_wb->_delay
    _i2c_stop->_delay
    _i2c_start->_delay
    _i2c_rb->_delay
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _lcd_str->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_init->_lcd_cmd
    _lcd_cmd->_atraso_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                63    63      0   11691
                                             16 COMRAM    62    62      0
                          _atraso_ms
                         _kpDebounce
                             _kpInit
                             _kpRead
                            _lcd_cmd
                            _lcd_dat
                           _lcd_init
                            _lcd_str
                       _pwmFrequency
                            _pwmInit
                              _rtc_r
                         _serialInit
                         _serialRead
 ---------------------------------------------------------------------------------
 (1) _serialRead                                           1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _serialInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rtc_r                                                1     1      0    1070
                                              9 COMRAM     1     1      0
                               _getd
                               _getu
                             _i2c_rb
                          _i2c_start
                           _i2c_stop
                             _i2c_wb
 ---------------------------------------------------------------------------------
 (2) _i2c_wb                                               4     4      0     228
                                              4 COMRAM     4     4      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0     138
                              _delay
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0     138
                              _delay
 ---------------------------------------------------------------------------------
 (2) _i2c_rb                                               5     5      0     252
                                              4 COMRAM     5     5      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                4     4      0     138
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _getu                                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getd                                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0     626
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2     626
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2    2476
                                              7 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0    1018
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    1992
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0    1018
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2     974
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     315
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _kpDebounce
   _kpInit
   _kpRead
   _lcd_cmd
     _atraso_ms
     _lcd_wr
   _lcd_dat
     _atraso_ms
     _lcd_wr
   _lcd_init
     _atraso_ms
     _lcd_cmd
   _lcd_str
     _lcd_dat
   _pwmFrequency
     ___aldiv
   _pwmInit
     _pwmFrequency
   _rtc_r
     _getd
     _getu
     _i2c_rb
       _delay
     _i2c_start
       _delay
     _i2c_stop
       _delay
     _i2c_wb
       _delay
   _serialInit
   _serialRead

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     4E      69       1       82.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      69      15        0.0%
DATA                 0      0      69       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Aug 01 04:17:59 2021

                     l80 0C0E                       l57 099E                       l83 0A8E  
                     l77 0C0E                       l89 0AF4                      l115 10DE  
                    l204 1326                      l222 0D7C                      l302 12B6  
                    l223 0D94                      l224 0D9C                      l321 1306  
                    l242 124C                      l227 1330                      l251 107A  
                    l315 113E                      l236 1338                      l332 0F92  
                    l324 12F6                      l245 11F6                      l333 0FDA  
                    l270 12D0                      l334 0FF2                      l239 1276  
                    l351 1312                      l336 1002                      l328 118C  
                    l329 119A                      l354 131C                      l267 129C  
                    l357 0F80                      l439 0EA8                      l299 1222  
                    _PR2 000FCB                      wreg 000FE8                     l2001 0FF4  
                   l2011 130A                     l2003 0FF8                     l2101 0D8C  
                   l2005 0FFE                     l2021 12B2                     l2103 0D98  
                   l2031 12B8                     l2015 1316                     l2007 1000  
                   l2111 0ED2                     l2023 12B4                     l2105 131E  
                   l2025 119C                     l2041 1004                     l2033 12BA  
                   l2121 0EFC                     l2113 0EDA                     l2051 0C24  
                   l2027 11A0                     l2043 100C                     l2035 12BE  
                   l2131 0F24                     l2123 0F04                     l2115 0EE2  
                   l2107 0EAA                     l2019 129E                     l2211 075C  
                   l2061 0C30                     l2053 0C28                     l2029 11AC  
                   l2045 103C                     l2037 12C0                     l2141 0F64  
                   l2133 0F2E                     l2125 0F0E                     l2117 0EF0  
                   l2109 0ECE                     l2301 092A                     l2221 0794  
                   l2213 0760                     l2205 0740                     l2071 0C7E  
                   l2063 0C72                     l2055 0C2C                     l2047 103E  
                   l2039 12C4                     l2143 0F68                     l2135 0F36  
                   l2127 0F16                     l2119 0EF4                     l2151 11FC  
                   l2311 0958                     l2303 0936                     l2231 07C4  
                   l2223 07A0                     l2215 077C                     l2207 0744  
                   l2081 0CCA                     l2073 0C9A                     l2049 1328  
                   l2145 0F70                     l2137 0F3E                     l2129 0F1E  
                   l2153 120A                     l2401 0B48                     l2313 0960  
                   l2241 07EC                     l2321 0990                     l2233 07CA  
                   l2225 07A6                     l2217 0788                     l2209 0754  
                   l2091 0D42                     l2083 0CFA                     l2147 0F78  
                   l2139 0F48                     l2155 120E                     l2403 0B58  
                   l2331 09CE                     l2323 09AC                     l2315 0972  
                   l2251 082C                     l2243 0808                     l2235 07D6  
                   l2227 07B2                     l2219 078E                     l2171 06E8  
                   l2163 06B8                     l2093 0D52                     l2085 0D2E  
                   l2069 0C7A                     l2157 121C                     l2149 11F8  
                   l2421 0BB2                     l2405 0B5A                     l2341 0A1A  
                   l2325 09B8                     l2333 09E6                     l2317 0974  
                   l2309 093A                     l2261 0864                     l2253 0832  
                   l2245 0814                     l2229 07B8                     l2181 0718  
                   l2173 06EE                     l2165 06DC                     l2095 0D6A  
                   l2087 0D30                     l2079 0C9E                     l2159 1220  
                   l2431 0BDC                     l2415 0B84                     l2423 0BC6  
                   l2407 0B6E                     l2351 0A44                     l2343 0A26  
                   l2335 09F4                     l2327 09C4                     l2319 0984  
                   l2271 0898                     l2263 0876                     l2255 083E  
                   l2247 081A                     l2239 07E8                     l2183 071E  
                   l2175 06FA                     l2167 06E0                     l2097 0D70  
                   l2089 0D40                     l2433 0BF8                     l2425 0BD8  
                   l2417 0BA0                     l2409 0B80                     l2361 0A74  
                   l2353 0A50                     l2345 0A2C                     l2337 09FA  
                   l2329 09CA                     l2281 08CA                     l2273 08A0  
                   l2257 084C                     l2249 0820                     l2193 0732  
                   l2185 0722                     l2177 0700                     l2169 06E4  
                   l2099 0D74                     l2435 0BFA                     l2419 0BB0  
                   l2363 0A76                     l2355 0A56                     l2347 0A32  
                   l2339 09FE                     l2291 08F8                     l2283 08D6  
                   l2275 08B2                     l2259 0858                     l2187 072E  
                   l2179 070C                     l1813 10A0                     l1805 107C  
                   l1901 0E88                     l2381 0AC8                     l2365 0A78  
                   l2357 0A62                     l2349 0A3E                     l2293 0900  
                   l2277 08B4                     l2269 087A                     l2197 0732  
                   l1823 10BE                     l1815 10A4                     l1807 1088  
                   l1831 1334                     l1911 1258                     l1903 0E98  
                   l2391 0B18                     l2383 0AE6                     l2375 0A9C  
                   l2359 0A68                     l2295 0912                     l2279 08C4  
                   l2199 0734                     l1809 108C                     l1913 125A  
                   l1921 1278                     l1841 10EC                     l1833 10E0  
                   l2393 0B28                     l2377 0AAE                     l2385 0AF2  
                   l2369 0A8A                     l2297 0914                     l2289 08DA  
                   l1819 10B8                     l1827 10C4                     l1915 1266  
                   l1907 1250                     l1931 123C                     l1923 1226  
                   l1851 1118                     l2387 0AF6                     l2379 0AC0  
                   l2299 0924                     l1829 10C8                     l1917 1268  
                   l1909 1252                     l1933 123E                     l1925 1228  
                   l1861 1128                     l1845 1100                     l1941 1300  
                   l2389 0B06                     l1919 1274                     l1935 124A  
                   l1927 122E                     l1871 0DC4                     l1863 0D9E  
                   l1855 111E                     l1847 1104                     l1839 10E8  
                   l1943 12E8                     l1951 1144                     l2399 0B2C  
                   l1929 1230                     l1881 0E0C                     l1873 0DD2  
                   l1865 0DA2                     l1937 12F8                     l1945 12EC  
                   l1961 1174                     l1891 0E56                     l1883 0E14  
                   l1875 0DE2                     l1867 0DB0                     l1859 1124  
                   l1939 12FC                     l1947 12F0                     l1971 1192  
                   l1963 1178                     l1893 0E66                     l1885 0E20  
                   l1877 0DE6                     l1869 0DC0                     l1981 0F8C  
                   l1973 1198                     l1965 117A                     l1957 1148  
                   l1949 1142                     l1895 0E68                     l1887 0E2E  
                   l1879 0DF6                     l1991 0FC6                     l1975 0F84  
                   l1967 117C                     l1959 1172                     l1897 0E72  
                   l1889 0E38                     l1993 0FC8                     l1977 0F88  
                   l1969 118E                     l1899 0E78                     l1995 0FCA  
                   l1987 0F94                     l1979 0F8A                     l1997 0FDC  
                   l1989 0F98                     l1999 0FEC                     STR_1 067D  
                   STR_2 0696                     STR_3 069F                     STR_4 0623  
                   STR_5 0612                     STR_6 0662                     STR_7 0634  
                   STR_8 06A8                     STR_9 0601                     u1200 0DD2  
                   u1201 0DCE                     u1130 109C                     u1210 0E0C  
                   u1131 1098                     u1211 0E08                     u1140 10B4  
                   u1220 0E2E                     u1300 0FEC                     u1141 10B0  
                   u1221 0E2A                     u1301 0FE8                     u1150 10DE  
                   u1310 1038                     u1230 0E56                     u1151 10DA  
                   u1231 0E52                     u1320 106A                     u1240 0E88  
                   u1160 10FC                     u1241 0E84                     u1161 10F8  
                   u1410 0D40                     u1330 107A                     u1170 1114  
                   u1411 0D3C                     u1331 1076                     u1171 1110  
                   u1420 0D52                     u1404 0D18                     u1180 113E  
                   u1260 118C                     u1500 0808                     u1421 0D4E  
                   u1405 0D12                     u1317 102E                     u1181 113A  
                   u1261 1188                     u1501 0804                     u1430 0D6A  
                   u1190 0DB0                     u1270 0FB0                     u1254 115C  
                   u1510 084C                     u1431 0D66                     u1327 1060  
                   u1191 0DAC                     u1271 0FA8                     u1255 1158  
                   u1511 0848                     u1440 0D8C                     u1360 0C9A  
                   u1344 0C46                     u1600 09F4                     u1520 0898  
                   u1441 0D88                     u1361 0C96                     u1345 0C42  
                   u1601 09F0                     u1521 0894                     u1354 0C66  
                   u1290 0FDA                     u1450 120A                     u1610 0A1A  
                   u1530 08C4                     u1355 0C62                     u1291 0FD6  
                   u1451 1206                     u1611 0A16                     u1531 08C0  
                   u1380 0CCA                     u1284 0FBC                     u1460 121C  
                   u1700 0B80                     u1620 0A86                     u1540 08F8  
                   u1381 0CC6                     u1285 0FB8                     u1461 1218  
                   u1701 0B7C                     u1621 0A82                     u1541 08F4  
                   u1374 0CB0                     u1278 0FB2                     u1710 0BC2  
                   u1630 0A9C                     u1550 0924                     u1470 0754  
                   u1375 0CAC                     u1711 0BBE                     u1631 0A98  
                   u1551 0920                     u1471 0750                     u1720 0BD8  
                   u1640 0AC0                     u1560 0958                     u1480 077C  
                   u1721 0BD4                     u1641 0ABC                     u1561 0954  
                   u1481 0778                     u1394 0CE8                     u1730 0C0A  
                   u1650 0AE6                     u1570 0984                     u1490 07E4  
                   u1395 0CE2                     u1731 0C06                     u1651 0AE2  
                   u1571 0980                     u1491 07E0                     u1740 0C1C  
                   u1660 0B06                     u1580 099E                     u1741 0C18  
                   u1661 0B02                     u1581 099A                     u1670 0B18  
                   u1590 09AC                     u1671 0B14                     u1591 09A8  
                   u1680 0B28                     u1681 0B24                     u1690 0B6A  
                   u1691 0B66                     _PIR1 000F9E                     _date 0060  
                   _getd 1308                     _getu 1314                     _main 06B8  
                   _time 004F                     fsr0h 000FEA                     indf0 000FEF  
                   fsr0l 000FE9                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     prodl 000FF3  
                   start 0000             ___param_bank 000000          __end_of___aldiv 0EAA  
                  ?_getd 0001                    ?_getu 0001                    ?_main 0001  
                  STR_10 06B1                    STR_11 067A                    STR_12 06B4  
                  STR_13 068A                    STR_14 0645                    STR_15 0670  
                  STR_16 0654                    STR_17 06A8                    _T2CON 000FCA  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _SPBRG 000FAF  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _PORTE 000F84                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96                    _TXREG 000FAD                    _TXSTA 000FAC  
        __end_of_lcd_dat 124E          __end_of_lcd_cmd 1278          __end_of_lcd_str 107C  
                  _delay 10E0                    _valor 005D                    _rtc_r 0EAA  
                  main@i 004E                    main@k 004A                    tablat 000FF5  
        __end_of_pwmInit 12D2                    status 000FD8          __initialization 12D2  
           __end_of_getd 1314             __end_of_getu 131E             __end_of_main 0C24  
       __end_of_i2c_stop 12F8                   ??_getd 0001                   ??_getu 0001  
                 ??_main 0011            __activetblptr 000002                   ?_delay 0001  
                 _ADCON1 000FC1                   _CCPR1L 000FBE                   ?_rtc_r 0001  
                 _SPBRGH 000FB0       __size_of_i2c_start 0010                   _i2c_rb 0F82  
                 _i2c_wb 1140         __end_of_lcd_init 11F8                ??___aldiv 0009  
                 _kpInit 1328                   _kpRead 131E                   _lcd_wr 1332  
                 delay@i 0001                   delay@j 0003                   delay@k 0004  
                 clear_0 12D8                   isa$std 000001                   getd@nn 0001  
              ??_lcd_dat 0007                   getu@nn 0001                ??_lcd_cmd 0007  
              ??_lcd_str 000A             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_pwmInit 0011  
             __accesstop 0080  __end_of__initialization 12DE            ___rparam_used 000001  
         __pcstackCOMRAM 0001            __end_of_delay 1140            __end_of_rtc_r 0F82  
      __end_of_i2c_start 1308                  ??_delay 0001                  ??_rtc_r 000A  
     __size_of_atraso_ms 0064                ?_i2c_stop 0001                  ?_i2c_rb 0001  
                ?_i2c_wb 0001                  ?_kpInit 0001                  ?_kpRead 0001  
                ?_lcd_wr 0001                  _CCP1CON 000FBD                  _BAUDCON 000FB8  
             _kpDebounce 0C24                ?_lcd_init 0001                  i2c_rb@i 0009  
                i2c_wb@i 0008               ??_i2c_stop 0005                  __Hparam 0000  
        __size_of_i2c_rb 0082          __size_of_i2c_wb 005C                  __Lparam 0000  
        kpDebounce@old_D 0006          kpDebounce@tempo 005F                  ___aldiv 0D9E  
      __end_of_atraso_ms 10E0             __psmallconst 0600          __size_of_kpInit 000A  
        __size_of_kpRead 000A          __size_of_lcd_wr 0008                  __pcinit 12D2  
         serialRead@resp 0001                  __ramtop 0600                  __ptext0 06B8  
                __ptext1 11F8                  __ptext2 129E                  __ptext3 0EAA  
                __ptext4 1140                  __ptext5 12E8                  __ptext6 12F8  
                __ptext7 0F82                  __ptext8 10E0                  __ptext9 1314  
                _lcd_dat 1224                  _lcd_cmd 124E                  _lcd_str 1004  
       ___aldiv@dividend 0001                  _pwmInit 12B8                  main@tmp 003C  
             ??_lcd_init 0008      kpDebounce@valorNovo 005B     end_of_initialization 12DE  
          __Lmediumconst 0000            ?_pwmFrequency 000F               _serialInit 129E  
             _serialRead 11F8         ___aldiv@quotient 000B                  postinc0 000FEE  
                postinc2 000FDE              ?_kpDebounce 0001                _PORTCbits 000F82  
              _PORTEbits 000F84                _TRISCbits 000F94               lcd_dat@val 0007  
             lcd_cmd@val 0007                i2c_rb@ack 0007           ??_pwmFrequency 0011  
              i2c_rb@ret 0008                i2c_wb@val 0007               lcd_str@str 0008  
         __end_of_i2c_rb 1004           __end_of_i2c_wb 119C               atraso_ms@i 0003  
             atraso_ms@j 0005               atraso_ms@k 0006           __end_of_kpInit 1332  
         __end_of_kpRead 1328           __end_of_lcd_wr 133A      start_initialization 12D2  
              _i2c_start 12F8      __size_of_kpDebounce 017A        __size_of_i2c_stop 0010  
               ??_i2c_rb 0005                 ??_i2c_wb 0005              ?_serialInit 0001  
            ?_serialRead 0001                 ??_kpInit 0001                 ??_kpRead 0003  
               ??_lcd_wr 0001              __pbssCOMRAM 004F               ?_i2c_start 0001  
      __size_of_lcd_init 005C                 ?___aldiv 0001                 ?_lcd_dat 0001  
               ?_lcd_cmd 0001                 ?_lcd_str 0008     __end_of_pwmFrequency 129E  
              _atraso_ms 107C              __smallconst 0600                 ?_pwmInit 0001  
    __size_of_serialInit 001A      __size_of_serialRead 002C           __size_of_delay 0060  
         __size_of_rtc_r 00D8         pwmFrequency@freq 000F           atraso_ms@valor 0001  
        ___aldiv@divisor 0005          ___aldiv@counter 0009             ??_kpDebounce 0001  
             ?_atraso_ms 0001    kpDebounce@valorAntigo 0059                lcd_wr@val 0001  
              main@tecla 004C              ??_i2c_start 0005                 _i2c_stop 12E8  
     __end_of_kpDebounce 0D9E                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___aldiv 010C         __size_of_lcd_dat 002A         __size_of_lcd_cmd 002A  
       __size_of_lcd_str 0078                 __ptext10 1308                 __ptext11 12B8  
               __ptext20 131E                 __ptext12 1278                 __ptext21 1328  
               __ptext13 0D9E                 __ptext22 0C24                 __ptext14 1004  
               __ptext15 1224                 __ptext16 119C                 __ptext17 124E  
               __ptext18 1332                 __ptext19 107C         __size_of_pwmInit 001A  
               _lcd_init 119C            __size_of_getd 000C            __size_of_getu 000A  
          __size_of_main 056C             ??_serialInit 0001             ??_serialRead 0001  
               isa$xinst 000000    __size_of_pwmFrequency 0026                 main@atmp 0012  
               main@cont 004B                 main@btmp 0020                 main@ctmp 002E  
               lcd_str@i 000C              ??_atraso_ms 0003       __end_of_serialInit 12B8  
     __end_of_serialRead 1224             _pwmFrequency 1278                 rtc_r@tmp 000A  
            kpDebounce@i 000A              kpDebounce@j 0009              kpDebounce@k 0007  
           ___aldiv@sign 000A  
